{"ast":null,"code":"var _jsxFileName = \"/home/jero/Documentos/IonicReactApp/cursoreact/src/pages/products/ProductsTaladroList.tsx\",\n    _s = $RefreshSig$();\n\nimport { IonButton, IonButtons, IonCard, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonInfiniteScroll, IonInfiniteScrollContent, IonItem, IonMenuButton, IonPage, IonRow, IonSearchbar, IonTitle, IonToolbar } from '@ionic/react';\nimport { add } from 'ionicons/icons';\nimport { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const data: Product[] = require('./Taladro.json');\nlet data = [];\n\nconst ProductsTaladroList = () => {\n  _s();\n\n  const {\n    name\n  } = useParams();\n  useEffect(() => {\n    a();\n  }, []);\n\n  const a = () => {\n    let obj = [];\n\n    const xslx = require('xlsx');\n\n    const filePath = \"../../resources/ExcelFiles/Taladro.xlsx\";\n    const workbook = xslx.readFile(filePath);\n    const sheet = workbook.Sheets[workbook.SheetNames[0]];\n    const posts = [];\n    let post = {};\n    let id = 0;\n\n    for (let cell in sheet) {\n      const cellAsString = cell.toString();\n\n      if (cellAsString !== \"f\" && cellAsString !== \"g\") {\n        switch (cellAsString[0]) {\n          case 'A':\n            post.cod = sheet[cell].v;\n            post.id = id++;\n            break;\n\n          case 'B':\n            post.description = sheet[cell].v;\n            break;\n\n          case 'C':\n            post.brand = sheet[cell].v;\n            break;\n\n          case 'E':\n            post.price = sheet[cell].v;\n            obj.push({\n              id: post.id,\n              cod: post.cod,\n              description: post.description,\n              brand: post.brand,\n              iva: post.iva,\n              price: post.price\n            });\n            posts.push(post);\n            post = {};\n            break;\n\n          default:\n            break;\n        }\n      }\n    }\n\n    console.log(posts);\n    let json = JSON.stringify(obj);\n\n    let fs = require('fs');\n\n    fs.writeFile(\"Taladro.json\", json, function (err) {\n      if (err) throw err;\n      data = require('./Taladro.json');\n      console.log('complete');\n    });\n  };\n\n  const history = useHistory();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(100);\n  const [searchText, setSearchText] = useState('');\n  const [isInfiniteDisabled, setInfiniteDisabled] = useState(false);\n  const INITIAL_STATE = {\n    id: 0,\n    cod: '',\n    description: '',\n    price: ''\n  };\n  const [productToCart, setProductToCart] = useState(INITIAL_STATE);\n  useEffect(() => {}, [searchText, productToCart]);\n  /* \n  const search = async ()=> {\n      let result = await searchSuppliers();\n      setProveedores(result);\n   }\n  const remove = async(id:string)=>{\n      await removeSupplier(id);\n      search();\n  }\n  const addSupplier = () =>{\n      history.push('/page/supplier/new')\n  }\n   const editSupplier = (id:string)=> {\n      history.push('/page/supplier/'+id);\n  }\n  */\n\n  const loadData = ev => {\n    setTimeout(() => {\n      setRowsPerPage(rowsPerPage + 100);\n      ev.target.complete();\n    }, 500);\n  };\n\n  const reloadList = () => {\n    history.push('/page/changeList');\n  };\n\n  const addToCart = product => {\n    let aux = productToCart;\n    setProductToCart(aux);\n  };\n\n  return /*#__PURE__*/_jsxDEV(IonPage, {\n    children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n      children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n        children: /*#__PURE__*/_jsxDEV(IonButtons, {\n          slot: \"start\",\n          children: /*#__PURE__*/_jsxDEV(IonMenuButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n      fullscreen: true,\n      children: [/*#__PURE__*/_jsxDEV(IonHeader, {\n        collapse: \"condense\",\n        children: /*#__PURE__*/_jsxDEV(IonToolbar, {\n          children: /*#__PURE__*/_jsxDEV(IonTitle, {\n            size: \"large\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IonContent, {\n        children: [/*#__PURE__*/_jsxDEV(IonSearchbar, {\n          className: \"search-bar\",\n          value: searchText,\n          onIonChange: e => setSearchText(e.detail.value),\n          placeholder: \"Buscar...\",\n          showCancelButton: \"focus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IonCard, {\n          children: [/*#__PURE__*/_jsxDEV(IonTitle, {\n            className: \"title\",\n            children: \"Lista El Taladro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n            children: /*#__PURE__*/_jsxDEV(IonButton, {\n              color: \"primary\",\n              fill: \"solid\",\n              slot: \"end\",\n              size: \"default\",\n              onClick: reloadList,\n              children: [/*#__PURE__*/_jsxDEV(IonIcon, {\n                icon: add\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this), \"Actualizar lista Taladro\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IonGrid, {\n            className: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(IonRow, {\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Codigo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Descripcion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"Precio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), data.filter(producto => {\n              var _producto$description, _producto$cod;\n\n              return ((_producto$description = producto.description) === null || _producto$description === void 0 ? void 0 : _producto$description.toString().toLocaleLowerCase().includes(searchText.toLocaleLowerCase())) || ((_producto$cod = producto.cod) === null || _producto$cod === void 0 ? void 0 : _producto$cod.toString().toLocaleLowerCase().includes(searchText.toLocaleLowerCase()));\n            }).slice(0, rowsPerPage).map((producto, id) => /*#__PURE__*/_jsxDEV(IonRow, {\n              className: \"fila\",\n              children: [/*#__PURE__*/_jsxDEV(IonCol, {\n                children: [producto.cod, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: producto.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(IonCol, {\n                children: \"$\" + Number(producto.price).toFixed()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(IonButtons, {\n                children: /*#__PURE__*/_jsxDEV(IonButton, {\n                  size: \"small\",\n                  fill: \"solid\",\n                  color: \"success\",\n                  onClick: e => {\n                    setProductToCart(producto);\n                  },\n                  children: /*#__PURE__*/_jsxDEV(IonIcon, {\n                    icon: add\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 45\n              }, this)]\n            }, producto.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 41\n            }, this)), /*#__PURE__*/_jsxDEV(IonInfiniteScroll, {\n              onIonInfinite: loadData,\n              threshold: \"100px\",\n              disabled: isInfiniteDisabled,\n              children: /*#__PURE__*/_jsxDEV(IonInfiniteScrollContent, {\n                loadingSpinner: \"bubbles\",\n                loadingText: \"Cargando Productos...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductsTaladroList, \"9Kk4qU+fSuymEhBxYeknbk03ias=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = ProductsTaladroList;\nexport default ProductsTaladroList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsTaladroList\");","map":{"version":3,"sources":["/home/jero/Documentos/IonicReactApp/cursoreact/src/pages/products/ProductsTaladroList.tsx"],"names":["IonButton","IonButtons","IonCard","IonCol","IonContent","IonGrid","IonHeader","IonIcon","IonInfiniteScroll","IonInfiniteScrollContent","IonItem","IonMenuButton","IonPage","IonRow","IonSearchbar","IonTitle","IonToolbar","add","useState","useEffect","useHistory","useParams","data","ProductsTaladroList","name","a","obj","xslx","require","filePath","workbook","readFile","sheet","Sheets","SheetNames","posts","post","id","cell","cellAsString","toString","cod","v","description","brand","price","push","iva","console","log","json","JSON","stringify","fs","writeFile","err","history","page","setPage","rowsPerPage","setRowsPerPage","searchText","setSearchText","isInfiniteDisabled","setInfiniteDisabled","INITIAL_STATE","productToCart","setProductToCart","loadData","ev","setTimeout","target","complete","reloadList","addToCart","product","aux","e","detail","value","filter","producto","toLocaleLowerCase","includes","slice","map","Number","toFixed"],"mappings":";;;AACA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,OAAhC,EAAyCC,MAAzC,EAAiDC,UAAjD,EAA+FC,OAA/F,EAAwGC,SAAxG,EAAmHC,OAAnH,EAA4HC,iBAA5H,EAA+IC,wBAA/I,EAAmLC,OAAnL,EAAqMC,aAArM,EAAoNC,OAApN,EAA6NC,MAA7N,EAAqOC,YAArO,EAAiQC,QAAjQ,EAA2QC,UAA3Q,QAA6R,cAA7R;AACA,SAASC,GAAT,QAAyD,gBAAzD;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAqD,cAArD;;AAcA;AACA,IAAIC,IAAc,GAAC,EAAnB;;AACA,MAAMC,mBAA6B,GAAG,MAAM;AAAA;;AAExC,QAAM;AAAEC,IAAAA;AAAF,MAAWH,SAAS,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,CAAC;AACF,GAFM,EAEJ,EAFI,CAAT;;AAGA,QAAMA,CAAC,GAAG,MAAK;AAEf,QAAIC,GAAG,GAAC,EAAR;;AACA,UAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,UAAMC,QAAQ,GAAG,yCAAjB;AACA,UAAMC,QAAQ,GAAGH,IAAI,CAACI,QAAL,CAAcF,QAAd,CAAjB;AAEA,UAAMG,KAAK,GAAGF,QAAQ,CAACG,MAAT,CAAgBH,QAAQ,CAACI,UAAT,CAAoB,CAApB,CAAhB,CAAd;AAEA,UAAMC,KAAK,GAAI,EAAf;AACA,QAAIC,IAAI,GAAI,EAAZ;AACA,QAAIC,EAAE,GAAG,CAAT;;AACA,SAAK,IAAIC,IAAT,IAAiBN,KAAjB,EAAwB;AACpB,YAAMO,YAAY,GAAGD,IAAI,CAACE,QAAL,EAArB;;AAEA,UAAID,YAAY,KAAK,GAAjB,IAAwBA,YAAY,KAAK,GAA7C,EAAmD;AAE/C,gBAAQA,YAAY,CAAC,CAAD,CAApB;AACI,eAAK,GAAL;AAAUH,YAAAA,IAAI,CAACK,GAAL,GAAWT,KAAK,CAACM,IAAD,CAAL,CAAYI,CAAvB;AACAN,YAAAA,IAAI,CAACC,EAAL,GAAUA,EAAE,EAAZ;AACN;;AACJ,eAAK,GAAL;AAAUD,YAAAA,IAAI,CAACO,WAAL,GAAmBX,KAAK,CAACM,IAAD,CAAL,CAAYI,CAA/B;AACN;;AACJ,eAAK,GAAL;AAAUN,YAAAA,IAAI,CAACQ,KAAL,GAAaZ,KAAK,CAACM,IAAD,CAAL,CAAYI,CAAzB;AACN;;AACJ,eAAK,GAAL;AACIN,YAAAA,IAAI,CAACS,KAAL,GAAab,KAAK,CAACM,IAAD,CAAL,CAAYI,CAAzB;AACAhB,YAAAA,GAAG,CAACoB,IAAJ,CAAS;AAACT,cAAAA,EAAE,EAACD,IAAI,CAACC,EAAT;AAAaI,cAAAA,GAAG,EAACL,IAAI,CAACK,GAAtB;AAA0BE,cAAAA,WAAW,EAACP,IAAI,CAACO,WAA3C;AAAuDC,cAAAA,KAAK,EAACR,IAAI,CAACQ,KAAlE;AAAwEG,cAAAA,GAAG,EAACX,IAAI,CAACW,GAAjF;AAAsFF,cAAAA,KAAK,EAACT,IAAI,CAACS;AAAjG,aAAT;AACAV,YAAAA,KAAK,CAACW,IAAN,CAAWV,IAAX;AACAA,YAAAA,IAAI,GAAG,EAAP;AACA;;AACJ;AACI;AAfR;AAiBH;AACJ;;AACDY,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACA,QAAIe,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe1B,GAAf,CAAX;;AACA,QAAI2B,EAAE,GAAGzB,OAAO,CAAC,IAAD,CAAhB;;AACAyB,IAAAA,EAAE,CAACC,SAAH,CAAc,cAAd,EAA8BJ,IAA9B,EAAoC,UAASK,GAAT,EAAkB;AAClD,UAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTjC,MAAAA,IAAI,GAAEM,OAAO,CAAC,gBAAD,CAAb;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACC,KAJL;AAQC,GA/CD;;AAgDA,QAAMO,OAAO,GAAGpC,UAAU,EAA1B;AAGA,QAAM,CAACqC,IAAD,EAAOC,OAAP,IAAkBxC,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACyC,WAAD,EAAcC,cAAd,IAAgC1C,QAAQ,CAAC,GAAD,CAA9C;AACA,QAAM,CAAC2C,UAAD,EAAaC,aAAb,IAA8B5C,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAAC6C,kBAAD,EAAqBC,mBAArB,IAA4C9C,QAAQ,CAAC,KAAD,CAA1D;AAGA,QAAM+C,aAAsB,GAAG;AAC3B5B,IAAAA,EAAE,EAAE,CADuB;AAE3BI,IAAAA,GAAG,EAAE,EAFsB;AAG3BE,IAAAA,WAAW,EAAE,EAHc;AAI3BE,IAAAA,KAAK,EAAE;AAJoB,GAA/B;AAKA,QAAM,CAACqB,aAAD,EAAeC,gBAAf,IAAmCjD,QAAQ,CAAU+C,aAAV,CAAjD;AAEA9C,EAAAA,SAAS,CAAC,MAAM,CAGf,CAHQ,EAGN,CAAE0C,UAAF,EAAaK,aAAb,CAHM,CAAT;AAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAII,QAAME,QAAQ,GAAIC,EAAD,IAAa;AAC1BC,IAAAA,UAAU,CAAC,MAAM;AAEbV,MAAAA,cAAc,CAACD,WAAW,GAAG,GAAf,CAAd;AACAU,MAAAA,EAAE,CAACE,MAAH,CAAUC,QAAV;AACH,KAJS,EAIP,GAJO,CAAV;AAKH,GAND;;AAOA,QAAMC,UAAU,GAAC,MAAI;AACjBjB,IAAAA,OAAO,CAACV,IAAR,CAAa,kBAAb;AACH,GAFD;;AAGA,QAAM4B,SAAS,GAAGC,OAAD,IAAmB;AAChC,QAAIC,GAAG,GAAGV,aAAV;AAEAC,IAAAA,gBAAgB,CAACS,GAAD,CAAhB;AACH,GAJD;;AAKA,sBACI,QAAC,OAAD;AAAA,4BACI,QAAC,SAAD;AAAA,6BACI,QAAC,UAAD;AAAA,+BACI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,OAAjB;AAAA,iCACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,UAAD;AAAY,MAAA,UAAU,MAAtB;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC,UAApB;AAAA,+BACI,QAAC,UAAD;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,IAAI,EAAC,OAAf;AAAA,sBAAwBpD;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,UAAD;AAAA,gCACI,QAAC,YAAD;AAAc,UAAA,SAAS,EAAC,YAAxB;AAAqC,UAAA,KAAK,EAAEqC,UAA5C;AAAwD,UAAA,WAAW,EAAGgB,CAAD,IAAYf,aAAa,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAA9F;AAAgH,UAAA,WAAW,EAAC,WAA5H;AAAwI,UAAA,gBAAgB,EAAC;AAAzJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,QAAC,OAAD;AAAA,kCACI,QAAC,QAAD;AAAU,YAAA,SAAS,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI,QAAC,OAAD;AAAA,mCACI,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,SAAjB;AAA2B,cAAA,IAAI,EAAC,OAAhC;AAAwC,cAAA,IAAI,EAAC,KAA7C;AAAmD,cAAA,IAAI,EAAC,SAAxD;AAAkE,cAAA,OAAO,EAAEN,UAA3E;AAAA,sCACI,QAAC,OAAD;AAAS,gBAAA,IAAI,EAAExD;AAAf;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAUI,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC,OAAnB;AAAA,oCAGI,QAAC,MAAD;AAAA,sCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,EAUKK,IAAI,CAEA0D,MAFJ,CAGQC,QAAD,IAAuB;AAAA;;AAEnB,qBAAQ,0BAAAA,QAAQ,CAACtC,WAAT,gFAAsBH,QAAtB,GAAiC0C,iBAAjC,GAAqDC,QAArD,CAA8DtB,UAAU,CAACqB,iBAAX,EAA9D,wBAAkGD,QAAQ,CAACxC,GAA3G,kDAAkG,cAAcD,QAAd,GAAyB0C,iBAAzB,GAA6CC,QAA7C,CAAsDtB,UAAU,CAACqB,iBAAX,EAAtD,CAAlG,CAAR;AACH,aANR,EAOIE,KAPJ,CAOU,CAPV,EAOazB,WAPb,EAUI0B,GAVJ,CAUQ,CAACJ,QAAD,EAAoB5C,EAApB,kBAGG,QAAC,MAAD;AAA0B,cAAA,SAAS,EAAC,MAApC;AAAA,sCACI,QAAC,MAAD;AAAA,2BAAU4C,QAAQ,CAACxC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,MAAD;AAAA,0BAASwC,QAAQ,CAACtC;AAAlB;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,QAAC,MAAD;AAAA,0BAAS,MAAM2C,MAAM,CAACL,QAAQ,CAACpC,KAAV,CAAN,CAAuB0C,OAAvB;AAAf;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAII,QAAC,UAAD;AAAA,uCACI,QAAC,SAAD;AAAW,kBAAA,IAAI,EAAC,OAAhB;AAAwB,kBAAA,IAAI,EAAC,OAA7B;AAAqC,kBAAA,KAAK,EAAC,SAA3C;AAAqD,kBAAA,OAAO,EAAGV,CAAD,IAAS;AACnEV,oBAAAA,gBAAgB,CAACc,QAAD,CAAhB;AACH,mBAFD;AAAA,yCAII,QAAC,OAAD;AAAS,oBAAA,IAAI,EAAEhE;AAAf;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA,eAAagE,QAAQ,CAAC5C,EAAtB;AAAA;AAAA;AAAA;AAAA,oBAbX,CAVL,eAwCI,QAAC,iBAAD;AACI,cAAA,aAAa,EAAE+B,QADnB;AAEI,cAAA,SAAS,EAAC,OAFd;AAGI,cAAA,QAAQ,EAAEL,kBAHd;AAAA,qCAMI,QAAC,wBAAD;AACI,gBAAA,cAAc,EAAC,SADnB;AAEI,gBAAA,WAAW,EAAC;AAFhB;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,oBAxCJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+FH,CA7MD;;GAAMxC,mB;UAEeF,S,EAqDDD,U;;;KAvDdG,mB;AA+MN,eAAeA,mBAAf","sourcesContent":["\nimport { IonButton, IonButtons, IonCard, IonCol, IonContent, IonFab, IonFabButton, IonFabList, IonGrid, IonHeader, IonIcon, IonInfiniteScroll, IonInfiniteScrollContent, IonInput, IonItem, IonList, IonMenuButton, IonPage, IonRow, IonSearchbar, IonSplitPane, IonTitle, IonToolbar } from '@ionic/react';\nimport { add, car, cart, close, logoVimeo, pencil } from 'ionicons/icons';\nimport { useState, useEffect } from 'react';\nimport { useHistory, useParams, useRouteMatch } from 'react-router';\nimport Cart from '../../components/cart/Cart';\nimport ExploreContainer from '../../components/ExploreContainer';\nimport Product from \"../../interfaces/Product\";\n\ninterface Post{\n    id:number;\n    cod: string;\n    description: string;\n    price:string;\n    brand:string;\n    iva:string;\n\n}\n// const data: Product[] = require('./Taladro.json');\nlet data:Product[]=[];\nconst ProductsTaladroList: React.FC = () => {\n\n    const { name } = useParams<{ name: string; }>();\n\n    useEffect(() => {\n        a();\n      }, []);\n    const a = ()=> {\n\n    let obj=[]\n    const xslx = require('xlsx');\n    const filePath = \"../../resources/ExcelFiles/Taladro.xlsx\";\n    const workbook = xslx.readFile(filePath);\n    \n    const sheet = workbook.Sheets[workbook.SheetNames[0]];\n    \n    const posts =  [];\n    let post =  {}as Post;\n    let id = 0;\n    for (let cell in sheet) {\n        const cellAsString = cell.toString();\n        \n        if (cellAsString !== \"f\" && cellAsString !== \"g\" ) {\n            \n            switch (cellAsString[0]) {\n                case 'A': post.cod = sheet[cell].v;\n                          post.id = id++;\n                    break;\n                case 'B': post.description = sheet[cell].v;\n                    break;\n                case 'C': post.brand = sheet[cell].v;\n                    break;\n                case 'E':\n                    post.price = sheet[cell].v;\n                    obj.push({id:post.id, cod:post.cod,description:post.description,brand:post.brand,iva:post.iva, price:post.price});\n                    posts.push(post);\n                    post = {} as Post;\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n    console.log(posts);\n    let json = JSON.stringify(obj);\n    let fs = require('fs');\n    fs.writeFile (\"Taladro.json\", json, function(err:any) {\n        if (err) throw err;\n        data= require('./Taladro.json');\n        console.log('complete');\n        }\n    );\n    \n\n    }\n    const history = useHistory();\n\n\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(100);\n    const [searchText, setSearchText] = useState('');\n\n    const [isInfiniteDisabled, setInfiniteDisabled] = useState(false);\n\n\n    const INITIAL_STATE: Product = {\n        id: 0,\n        cod: '',\n        description: '',\n        price: '',}\n    const [productToCart,setProductToCart] = useState<Product>(INITIAL_STATE);\n    \n    useEffect(() => {\n        \n        \n    }, [ searchText,productToCart]);\n    /* \n    const search = async ()=> {\n        let result = await searchSuppliers();\n        setProveedores(result);\n\n    }\n    const remove = async(id:string)=>{\n        await removeSupplier(id);\n        search();\n    }\n    const addSupplier = () =>{\n        history.push('/page/supplier/new')\n    }\n\n    const editSupplier = (id:string)=> {\n        history.push('/page/supplier/'+id);\n    }\n    */\n\n    const loadData = (ev: any) => {\n        setTimeout(() => {\n\n            setRowsPerPage(rowsPerPage + 100);\n            ev.target.complete();\n        }, 500);\n    }\n    const reloadList=()=>{\n        history.push('/page/changeList');\n    }\n    const addToCart= (product:Product)=>{\n        let aux = productToCart;\n        \n        setProductToCart(aux)\n    }\n    return (\n        <IonPage>\n            <IonHeader>\n                <IonToolbar>\n                    <IonButtons slot=\"start\">\n                        <IonMenuButton />\n                    </IonButtons>\n                    \n                </IonToolbar>\n            </IonHeader>\n\n            <IonContent fullscreen>\n                <IonHeader collapse=\"condense\">\n                    <IonToolbar>\n                        <IonTitle size=\"large\">{name}</IonTitle>\n                    </IonToolbar>\n                </IonHeader>\n\n\n\n                <IonContent>\n                    <IonSearchbar className='search-bar' value={searchText} onIonChange={(e: any) => setSearchText(e.detail.value)} placeholder=\"Buscar...\" showCancelButton=\"focus\"></IonSearchbar>\n\n                    <IonCard>\n                        <IonTitle className='title'>Lista El Taladro</IonTitle>\n\n                        <IonItem>\n                            <IonButton color='primary' fill='solid' slot='end' size='default' onClick={reloadList}>\n                                <IonIcon icon={add} />\n                                Actualizar lista Taladro\n                            </IonButton>\n                        </IonItem>\n                        \n                        <IonGrid className='table'>\n                   \n                        \n                            <IonRow>\n                                <IonCol>Codigo</IonCol>\n                                <IonCol>Descripcion</IonCol>\n                                <IonCol>Precio</IonCol>\n                            </IonRow>\n\n                            {\n                             data\n                               \n                                .filter(\n                                    (producto: Product) => {\n\n                                        return (producto.description?.toString().toLocaleLowerCase().includes(searchText.toLocaleLowerCase()) || (producto.cod?.toString().toLocaleLowerCase().includes(searchText.toLocaleLowerCase())))\n                                    })\n                                .slice(0, rowsPerPage)\n                            \n\n                                .map((producto: Product, id: number) =>\n    \n\n                                        <IonRow key={producto.id} className=\"fila\" >\n                                            <IonCol >{producto.cod} </IonCol>\n                                            <IonCol>{producto.description}</IonCol>\n                                            <IonCol>{\"$\" + Number(producto.price).toFixed()}</IonCol>\n                                            <IonButtons>\n                                                <IonButton size='small' fill='solid' color='success' onClick={(e:any)=>{\n                                                    setProductToCart(producto);\n                                                }}>\n                                                    \n                                                    <IonIcon icon={add}/>\n                                                </IonButton>\n                                            </IonButtons>\n                                        \n                                        </IonRow>\n                                \n\n                                )}\n                            <IonInfiniteScroll\n                                onIonInfinite={loadData}\n                                threshold=\"100px\"\n                                disabled={isInfiniteDisabled}\n\n                            >\n                                <IonInfiniteScrollContent\n                                    loadingSpinner=\"bubbles\"\n                                    loadingText=\"Cargando Productos...\"\n                                ></IonInfiniteScrollContent>\n                            </IonInfiniteScroll>\n                        </IonGrid>\n                    </IonCard>\n                </IonContent>\n\n\n\n\n\n            </IonContent>\n        </IonPage>\n    );\n};\n\nexport default ProductsTaladroList;\n\n\n"]},"metadata":{},"sourceType":"module"}