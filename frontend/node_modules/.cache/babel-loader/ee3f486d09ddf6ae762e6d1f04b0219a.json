{"ast":null,"code":"export async function searchCostumers() {\n  let url = process.env.REACT_APP_API + 'custmoers';\n  let response = await fetch('/api/customers', {\n    \"method\": \"GET\",\n    \"headers\": {\n      \"Content-Type\": 'application/json'\n    }\n  });\n  return response.json;\n}\nexport async function removeCostumer(id) {\n  let customers = await searchCostumers();\n  let indice = customers.findIndex(customer => customer.id == id);\n  customers.splice(indice, 1);\n  localStorage['customers'] = JSON.stringify(customers);\n}\nexport const saveCostumer = async customer => {\n  let customers = await searchCostumers();\n\n  if (customer.id) {\n    let indice = customers.findIndex(c => c.id == customer.id);\n    customers[indice] = customer;\n  } else {\n    customer.id = String(Math.round(Math.random() * 1000));\n    customers.push(customer);\n  }\n\n  localStorage['customers'] = JSON.stringify(customers);\n};\nexport async function searchCustomerById(id) {\n  let customers = await searchCostumers();\n  return customers.find(customer => customer.id == id);\n}","map":{"version":3,"sources":["/home/jero/Documentos/IonicReactApp/cursoreact/src/pages/customer/CustomerApi.ts"],"names":["searchCostumers","url","process","env","REACT_APP_API","response","fetch","json","removeCostumer","id","customers","indice","findIndex","customer","splice","localStorage","JSON","stringify","saveCostumer","c","String","Math","round","random","push","searchCustomerById","find"],"mappings":"AAEA,OAAO,eAAeA,eAAf,GAAgC;AACnC,MAAIC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAAZ,GAA4B,WAAtC;AACA,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAD,EAAkB;AACxC,cAAS,KAD+B;AAExC,eAAW;AACP,sBAAgB;AADT;AAF6B,GAAlB,CAA1B;AAMA,SAAOD,QAAQ,CAACE,IAAhB;AACH;AACD,OAAO,eAAeC,cAAf,CAA8BC,EAA9B,EAAwC;AAC3C,MAAIC,SAAS,GAAG,MAAMV,eAAe,EAArC;AACA,MAAIW,MAAM,GAAGD,SAAS,CAACE,SAAV,CAAqBC,QAAD,IAAuBA,QAAQ,CAACJ,EAAT,IAAeA,EAA1D,CAAb;AACAC,EAAAA,SAAS,CAACI,MAAV,CAAiBH,MAAjB,EAAwB,CAAxB;AACAI,EAAAA,YAAY,CAAC,WAAD,CAAZ,GAA4BC,IAAI,CAACC,SAAL,CAAeP,SAAf,CAA5B;AACH;AAED,OAAO,MAAMQ,YAAY,GAAG,MAAOL,QAAP,IAA2B;AACnD,MAAIH,SAAS,GAAG,MAAMV,eAAe,EAArC;;AACA,MAAGa,QAAQ,CAACJ,EAAZ,EAAe;AACX,QAAIE,MAAM,GAAGD,SAAS,CAACE,SAAV,CAAqBO,CAAD,IAAgBA,CAAC,CAACV,EAAF,IAAQI,QAAQ,CAACJ,EAArD,CAAb;AACAC,IAAAA,SAAS,CAACC,MAAD,CAAT,GAAkBE,QAAlB;AAEH,GAJD,MAKI;AACAA,IAAAA,QAAQ,CAACJ,EAAT,GAAaW,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,IAAzB,CAAD,CAAnB;AACAb,IAAAA,SAAS,CAACc,IAAV,CAAeX,QAAf;AACH;;AACDE,EAAAA,YAAY,CAAC,WAAD,CAAZ,GAA4BC,IAAI,CAACC,SAAL,CAAeP,SAAf,CAA5B;AACH,CAZM;AAcP,OAAO,eAAee,kBAAf,CAAkChB,EAAlC,EAA4C;AAC/C,MAAIC,SAAS,GAAG,MAAMV,eAAe,EAArC;AACA,SAAOU,SAAS,CAACgB,IAAV,CAAgBb,QAAD,IAAmBA,QAAQ,CAACJ,EAAT,IAAcA,EAAhD,CAAP;AACH","sourcesContent":["import Customer from \"./Customer\";\n\nexport async function searchCostumers(){\n    let url = process.env.REACT_APP_API + 'custmoers'\n    let response = await fetch('/api/customers',{\n        \"method\":\"GET\",\n        \"headers\": {\n            \"Content-Type\": 'application/json'\n        }\n    })\n    return response.json;\n}\nexport async function removeCostumer(id:string){\n    let customers = await searchCostumers();\n    let indice = customers.findIndex((customer:Customer) => customer.id == id);\n    customers.splice(indice,1);\n    localStorage['customers'] = JSON.stringify(customers);\n}\n\nexport const saveCostumer = async (customer:Customer)=>{\n    let customers = await searchCostumers();\n    if(customer.id){\n        let indice = customers.findIndex((c:Customer) => c.id == customer.id);\n        customers[indice]=customer;\n\n    }\n    else{\n        customer.id= String(Math.round(Math.random()*1000));\n        customers.push(customer);\n    }\n    localStorage['customers'] = JSON.stringify(customers);\n}\n\nexport async function searchCustomerById(id:string){\n    let customers = await searchCostumers();\n    return customers.find((customer :any) => customer.id ==id);\n}"]},"metadata":{},"sourceType":"module"}