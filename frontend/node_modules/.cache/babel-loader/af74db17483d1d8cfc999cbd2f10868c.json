{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { HTMLElement, h, Host, proxyCustomElement } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { c as createColorClasses } from './theme.js';\nconst noteIosCss = \":host{color:var(--color);font-family:var(--ion-font-family, inherit);-webkit-box-sizing:border-box;box-sizing:border-box}:host(.ion-color){color:var(--ion-color-base)}:host{--color:var(--ion-color-step-350, #a6a6a6)}\";\nconst noteMdCss = \":host{color:var(--color);font-family:var(--ion-font-family, inherit);-webkit-box-sizing:border-box;box-sizing:border-box}:host(.ion-color){color:var(--ion-color-base)}:host{--color:var(--ion-color-step-600, #666666);font-size:14px}\";\nlet Note = class extends HTMLElement {\n  constructor() {\n    super();\n\n    this.__registerHost();\n\n    this.__attachShadow();\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      class: createColorClasses(this.color, {\n        [mode]: true\n      })\n    }, h(\"slot\", null));\n  }\n\n  static get style() {\n    return {\n      ios: noteIosCss,\n      md: noteMdCss\n    };\n  }\n\n};\nNote = /*@__PURE__*/proxyCustomElement(Note, [33, \"ion-note\", {\n  \"color\": [513]\n}]);\n\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"ion-note\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-note\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Note);\n        }\n\n        break;\n    }\n  });\n}\n\nexport { Note as N, defineCustomElement as d };","map":{"version":3,"sources":["/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@ionic/core/components/note.js"],"names":["HTMLElement","h","Host","proxyCustomElement","b","getIonMode","c","createColorClasses","noteIosCss","noteMdCss","Note","constructor","__registerHost","__attachShadow","render","mode","class","color","style","ios","md","defineCustomElement","customElements","components","forEach","tagName","get","define","N","d"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAT,EAAsBC,CAAtB,EAAyBC,IAAzB,EAA+BC,kBAA/B,QAAyD,+BAAzD;AACA,SAASC,CAAC,IAAIC,UAAd,QAAgC,mBAAhC;AACA,SAASC,CAAC,IAAIC,kBAAd,QAAwC,YAAxC;AAEA,MAAMC,UAAU,GAAG,0NAAnB;AAEA,MAAMC,SAAS,GAAG,yOAAlB;AAEA,IAAIC,IAAI,GAAG,cAAcV,WAAd,CAA0B;AACnCW,EAAAA,WAAW,GAAG;AACZ;;AACA,SAAKC,cAAL;;AACA,SAAKC,cAAL;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAGV,UAAU,CAAC,IAAD,CAAvB;AACA,WAAQJ,CAAC,CAACC,IAAD,EAAO;AAAEc,MAAAA,KAAK,EAAET,kBAAkB,CAAC,KAAKU,KAAN,EAAa;AACpD,SAACF,IAAD,GAAQ;AAD4C,OAAb;AAA3B,KAAP,EAEDd,CAAC,CAAC,MAAD,EAAS,IAAT,CAFA,CAAT;AAGD;;AACe,aAALiB,KAAK,GAAG;AAAE,WAAO;AAC1BC,MAAAA,GAAG,EAAEX,UADqB;AAE1BY,MAAAA,EAAE,EAAEX;AAFsB,KAAP;AAGjB;;AAf+B,CAArC;AAiBAC,IAAI,GAAG,aAAcP,kBAAkB,CAACO,IAAD,EAAO,CAAC,EAAD,EAAK,UAAL,EAAiB;AAC3D,WAAS,CAAC,GAAD;AADkD,CAAjB,CAAP,CAAvC;;AAGA,SAASW,mBAAT,GAA+B;AAC7B,MAAI,OAAOC,cAAP,KAA0B,WAA9B,EAA2C;AACzC;AACD;;AACD,QAAMC,UAAU,GAAG,CAAC,UAAD,CAAnB;AACAA,EAAAA,UAAU,CAACC,OAAX,CAAmBC,OAAO,IAAI;AAAE,YAAQA,OAAR;AAC9B,WAAK,UAAL;AACE,YAAI,CAACH,cAAc,CAACI,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;AAChCH,UAAAA,cAAc,CAACK,MAAf,CAAsBF,OAAtB,EAA+Bf,IAA/B;AACD;;AACD;AAL4B;AAM7B,GANH;AAOD;;AAED,SAASA,IAAI,IAAIkB,CAAjB,EAAoBP,mBAAmB,IAAIQ,CAA3C","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { HTMLElement, h, Host, proxyCustomElement } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { c as createColorClasses } from './theme.js';\n\nconst noteIosCss = \":host{color:var(--color);font-family:var(--ion-font-family, inherit);-webkit-box-sizing:border-box;box-sizing:border-box}:host(.ion-color){color:var(--ion-color-base)}:host{--color:var(--ion-color-step-350, #a6a6a6)}\";\n\nconst noteMdCss = \":host{color:var(--color);font-family:var(--ion-font-family, inherit);-webkit-box-sizing:border-box;box-sizing:border-box}:host(.ion-color){color:var(--ion-color-base)}:host{--color:var(--ion-color-step-600, #666666);font-size:14px}\";\n\nlet Note = class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { class: createColorClasses(this.color, {\n        [mode]: true,\n      }) }, h(\"slot\", null)));\n  }\n  static get style() { return {\n    ios: noteIosCss,\n    md: noteMdCss\n  }; }\n};\nNote = /*@__PURE__*/ proxyCustomElement(Note, [33, \"ion-note\", {\n    \"color\": [513]\n  }]);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-note\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-note\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Note);\n      }\n      break;\n  } });\n}\n\nexport { Note as N, defineCustomElement as d };\n"]},"metadata":{},"sourceType":"module"}