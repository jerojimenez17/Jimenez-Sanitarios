{"ast":null,"code":"export const searchCostumers = () => {\n  if (!localStorage['employees']) {\n    localStorage['employees'] = '[]';\n  }\n\n  let employees = localStorage['employees'];\n  employees = JSON.parse(employees);\n  return employees;\n};\nexport const removeCostumer = id => {\n  let employees = searchCostumers();\n  let indice = employees.findIndex(employee => employee.id == id);\n  employees.splice(indice, 1);\n  localStorage['employees'] = JSON.stringify(employees);\n};\nexport const saveCostumer = employee => {\n  let employees = searchCostumers();\n\n  if (employee.id) {\n    let indice = employees.findIndex(c => c.id == employee.id);\n    employees[indice] = employee;\n  } else {\n    employee.id = String(Math.round(Math.random() * 1000));\n    employees.push(employee);\n  }\n\n  localStorage['employees'] = JSON.stringify(employees);\n};\nexport const searchEmployeeById = id => {\n  let employees = searchCostumers();\n  return employees.find(employee => employee.id == id);\n};","map":{"version":3,"sources":["/home/jero/Documentos/IonicReactApp/cursoreact/src/pages/employee/EmployeeApi.ts"],"names":["searchCostumers","localStorage","employees","JSON","parse","removeCostumer","id","indice","findIndex","employee","splice","stringify","saveCostumer","c","String","Math","round","random","push","searchEmployeeById","find"],"mappings":"AAEA,OAAO,MAAMA,eAAe,GAAG,MAAI;AAC/B,MAAG,CAACC,YAAY,CAAC,WAAD,CAAhB,EAA8B;AAC1BA,IAAAA,YAAY,CAAC,WAAD,CAAZ,GAA2B,IAA3B;AACH;;AAED,MAAIC,SAAS,GAAGD,YAAY,CAAC,WAAD,CAA5B;AACAC,EAAAA,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWF,SAAX,CAAZ;AACA,SAAOA,SAAP;AAGH,CAVM;AAWP,OAAO,MAAMG,cAAc,GAAIC,EAAD,IAAa;AACvC,MAAIJ,SAAS,GAAGF,eAAe,EAA/B;AACA,MAAIO,MAAM,GAAGL,SAAS,CAACM,SAAV,CAAqBC,QAAD,IAAkBA,QAAQ,CAACH,EAAT,IAAeA,EAArD,CAAb;AACAJ,EAAAA,SAAS,CAACQ,MAAV,CAAiBH,MAAjB,EAAwB,CAAxB;AACAN,EAAAA,YAAY,CAAC,WAAD,CAAZ,GAA4BE,IAAI,CAACQ,SAAL,CAAeT,SAAf,CAA5B;AACH,CALM;AAOP,OAAO,MAAMU,YAAY,GAAIH,QAAD,IAAqB;AAC7C,MAAIP,SAAS,GAAGF,eAAe,EAA/B;;AACA,MAAGS,QAAQ,CAACH,EAAZ,EAAe;AACX,QAAIC,MAAM,GAAGL,SAAS,CAACM,SAAV,CAAqBK,CAAD,IAAgBA,CAAC,CAACP,EAAF,IAAQG,QAAQ,CAACH,EAArD,CAAb;AACAJ,IAAAA,SAAS,CAACK,MAAD,CAAT,GAAkBE,QAAlB;AAEH,GAJD,MAKI;AACAA,IAAAA,QAAQ,CAACH,EAAT,GAAaQ,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,IAAzB,CAAD,CAAnB;AACAf,IAAAA,SAAS,CAACgB,IAAV,CAAeT,QAAf;AACH;;AACDR,EAAAA,YAAY,CAAC,WAAD,CAAZ,GAA4BE,IAAI,CAACQ,SAAL,CAAeT,SAAf,CAA5B;AACH,CAZM;AAcP,OAAO,MAAMiB,kBAAkB,GAAIb,EAAD,IAAa;AAC3C,MAAIJ,SAAS,GAAGF,eAAe,EAA/B;AACA,SAAOE,SAAS,CAACkB,IAAV,CAAgBX,QAAD,IAAmBA,QAAQ,CAACH,EAAT,IAAcA,EAAhD,CAAP;AACH,CAHM","sourcesContent":["import Employee from \"./Employee\";\n\nexport const searchCostumers = ()=>{\n    if(!localStorage['employees']){\n        localStorage['employees']= '[]';\n    }\n    \n    let employees = localStorage['employees'];\n    employees = JSON.parse(employees);\n    return employees;\n\n    \n}\nexport const removeCostumer = (id:string)=>{\n    let employees = searchCostumers();\n    let indice = employees.findIndex((employee:any) => employee.id == id);\n    employees.splice(indice,1);\n    localStorage['employees'] = JSON.stringify(employees);\n}\n\nexport const saveCostumer = (employee:Employee)=>{\n    let employees = searchCostumers();\n    if(employee.id){\n        let indice = employees.findIndex((c:Employee) => c.id == employee.id);\n        employees[indice]=employee;\n\n    }\n    else{\n        employee.id= String(Math.round(Math.random()*1000));\n        employees.push(employee);\n    }\n    localStorage['employees'] = JSON.stringify(employees);\n}\n\nexport const searchEmployeeById = (id:string)=>{\n    let employees = searchCostumers();\n    return employees.find((employee :any) => employee.id ==id);\n}"]},"metadata":{},"sourceType":"module"}