{"ast":null,"code":"import _asyncToGenerator from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/regenerator/index.js\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { c as componentOnReady } from './helpers.js';\n\nvar attachComponent = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(delegate, container, component, cssClasses, componentProps, inline) {\n    var el;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!delegate) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", delegate.attachViewToDom(container, component, componentProps, cssClasses));\n\n          case 2:\n            if (!(!inline && typeof component !== 'string' && !(component instanceof HTMLElement))) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error('framework delegate is missing');\n\n          case 4:\n            el = typeof component === 'string' ? container.ownerDocument && container.ownerDocument.createElement(component) : component;\n\n            if (cssClasses) {\n              cssClasses.forEach(function (c) {\n                return el.classList.add(c);\n              });\n            }\n\n            if (componentProps) {\n              Object.assign(el, componentProps);\n            }\n\n            container.appendChild(el);\n            _context.next = 10;\n            return new Promise(function (resolve) {\n              return componentOnReady(el, resolve);\n            });\n\n          case 10:\n            return _context.abrupt(\"return\", el);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function attachComponent(_x, _x2, _x3, _x4, _x5, _x6) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar detachComponent = function detachComponent(delegate, element) {\n  if (element) {\n    if (delegate) {\n      var container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n\n    element.remove();\n  }\n\n  return Promise.resolve();\n};\n\nvar CoreDelegate = function CoreDelegate() {\n  var BaseComponent;\n  var Reference;\n\n  var attachViewToDom = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(parentElement, userComponent) {\n      var userComponentProps,\n          cssClasses,\n          el,\n          app,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              userComponentProps = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n              cssClasses = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : [];\n              BaseComponent = parentElement;\n              /**\n               * If passing in a component via the `component` props\n               * we need to append it inside of our overlay component.\n               */\n\n              if (!userComponent) {\n                _context2.next = 10;\n                break;\n              }\n\n              /**\n               * If passing in the tag name, create\n               * the element otherwise just get a reference\n               * to the component.\n               */\n              el = typeof userComponent === 'string' ? BaseComponent.ownerDocument && BaseComponent.ownerDocument.createElement(userComponent) : userComponent;\n              /**\n               * Add any css classes passed in\n               * via the cssClasses prop on the overlay.\n               */\n\n              cssClasses.forEach(function (c) {\n                return el.classList.add(c);\n              });\n              /**\n               * Add any props passed in\n               * via the componentProps prop on the overlay.\n               */\n\n              Object.assign(el, userComponentProps);\n              /**\n               * Finally, append the component\n               * inside of the overlay component.\n               */\n\n              BaseComponent.appendChild(el);\n              _context2.next = 10;\n              return new Promise(function (resolve) {\n                return componentOnReady(el, resolve);\n              });\n\n            case 10:\n              /**\n               * Get the root of the app and\n               * add the overlay there.\n               */\n              app = document.querySelector('ion-app') || document.body;\n              /**\n               * Create a placeholder comment so that\n               * we can return this component to where\n               * it was previously.\n               */\n\n              Reference = document.createComment('ionic teleport');\n              BaseComponent.parentNode.insertBefore(Reference, BaseComponent);\n              app.appendChild(BaseComponent);\n              return _context2.abrupt(\"return\", BaseComponent);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function attachViewToDom(_x7, _x8) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var removeViewFromDom = function removeViewFromDom() {\n    /**\n     * Return component to where it was previously in the DOM.\n     */\n    if (BaseComponent && Reference) {\n      Reference.parentNode.insertBefore(BaseComponent, Reference);\n      Reference.remove();\n    }\n\n    return Promise.resolve();\n  };\n\n  return {\n    attachViewToDom: attachViewToDom,\n    removeViewFromDom: removeViewFromDom\n  };\n};\n\nexport { CoreDelegate as C, attachComponent as a, detachComponent as d };","map":{"version":3,"sources":["/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@ionic/core/components/framework-delegate.js"],"names":["c","componentOnReady","attachComponent","delegate","container","component","cssClasses","componentProps","inline","attachViewToDom","HTMLElement","Error","el","ownerDocument","createElement","forEach","classList","add","Object","assign","appendChild","Promise","resolve","detachComponent","element","parentElement","removeViewFromDom","remove","CoreDelegate","BaseComponent","Reference","userComponent","userComponentProps","app","document","querySelector","body","createComment","parentNode","insertBefore","C","a","d"],"mappings":"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","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { c as componentOnReady } from './helpers.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps, inline) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (!inline && typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\nconst CoreDelegate = () => {\n  let BaseComponent;\n  let Reference;\n  const attachViewToDom = async (parentElement, userComponent, userComponentProps = {}, cssClasses = []) => {\n    BaseComponent = parentElement;\n    /**\n     * If passing in a component via the `component` props\n     * we need to append it inside of our overlay component.\n     */\n    if (userComponent) {\n      /**\n       * If passing in the tag name, create\n       * the element otherwise just get a reference\n       * to the component.\n       */\n      const el = (typeof userComponent === 'string')\n        ? BaseComponent.ownerDocument && BaseComponent.ownerDocument.createElement(userComponent)\n        : userComponent;\n      /**\n       * Add any css classes passed in\n       * via the cssClasses prop on the overlay.\n       */\n      cssClasses.forEach(c => el.classList.add(c));\n      /**\n       * Add any props passed in\n       * via the componentProps prop on the overlay.\n       */\n      Object.assign(el, userComponentProps);\n      /**\n       * Finally, append the component\n       * inside of the overlay component.\n       */\n      BaseComponent.appendChild(el);\n      await new Promise(resolve => componentOnReady(el, resolve));\n    }\n    /**\n     * Get the root of the app and\n     * add the overlay there.\n     */\n    const app = document.querySelector('ion-app') || document.body;\n    /**\n     * Create a placeholder comment so that\n     * we can return this component to where\n     * it was previously.\n     */\n    Reference = document.createComment('ionic teleport');\n    BaseComponent.parentNode.insertBefore(Reference, BaseComponent);\n    app.appendChild(BaseComponent);\n    return BaseComponent;\n  };\n  const removeViewFromDom = () => {\n    /**\n     * Return component to where it was previously in the DOM.\n     */\n    if (BaseComponent && Reference) {\n      Reference.parentNode.insertBefore(BaseComponent, Reference);\n      Reference.remove();\n    }\n    return Promise.resolve();\n  };\n  return { attachViewToDom, removeViewFromDom };\n};\n\nexport { CoreDelegate as C, attachComponent as a, detachComponent as d };\n"]},"metadata":{},"sourceType":"module"}