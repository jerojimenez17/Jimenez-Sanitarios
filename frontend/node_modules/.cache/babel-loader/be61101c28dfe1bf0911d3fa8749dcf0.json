{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { HTMLElement, createEvent, h, Host, proxyCustomElement } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nconst accordionGroupIosCss = \":host{display:block}:host(.accordion-group-expand-inset){margin-left:16px;margin-right:16px;margin-top:16px;margin-bottom:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.accordion-group-expand-inset){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){border-bottom:none}\";\nconst accordionGroupMdCss = \":host{display:block}:host(.accordion-group-expand-inset){margin-left:16px;margin-right:16px;margin-top:16px;margin-bottom:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.accordion-group-expand-inset){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion){-webkit-box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){margin-left:0;margin-right:0;margin-top:16px;margin-bottom:16px;border-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion):first-of-type{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\";\nlet AccordionGroup = class extends HTMLElement {\n  constructor() {\n    super();\n\n    this.__registerHost();\n\n    this.__attachShadow();\n\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    /**\n     * If `true`, all accordions inside of the\n     * accordion group will animate when expanding\n     * or collapsing.\n     */\n\n    this.animated = true;\n    /**\n     * If `true`, the accordion group cannot be interacted with.\n     */\n\n    this.disabled = false;\n    /**\n     * If `true`, the accordion group cannot be interacted with,\n     * but does not alter the opacity.\n     */\n\n    this.readonly = false;\n    /**\n     * Describes the expansion behavior for each accordion.\n     * Possible values are `\"compact\"` and `\"inset\"`.\n     * Defaults to `\"compact\"`.\n     */\n\n    this.expand = 'compact';\n  }\n\n  valueChanged() {\n    const {\n      value,\n      multiple\n    } = this;\n    /**\n     * If accordion group does not\n     * let multiple accordions be open\n     * at once, but user passes an array\n     * just grab the first value.\n     */\n\n    if (!multiple && Array.isArray(value)) {\n      this.value = value[0];\n    } else {\n      this.ionChange.emit({\n        value: this.value\n      });\n    }\n  }\n\n  async disabledChanged() {\n    const {\n      disabled\n    } = this;\n    const accordions = await this.getAccordions();\n\n    for (const accordion of accordions) {\n      accordion.disabled = disabled;\n    }\n  }\n\n  async readonlyChanged() {\n    const {\n      readonly\n    } = this;\n    const accordions = await this.getAccordions();\n\n    for (const accordion of accordions) {\n      accordion.readonly = readonly;\n    }\n  }\n\n  async onKeydown(ev) {\n    const activeElement = document.activeElement;\n\n    if (!activeElement) {\n      return;\n    }\n\n    const accordionEl = activeElement.tagName === 'ION-ACCORDION' ? activeElement : activeElement.closest('ion-accordion');\n\n    if (!accordionEl) {\n      return;\n    }\n\n    const closestGroup = accordionEl.closest('ion-accordion-group');\n\n    if (closestGroup !== this.el) {\n      return;\n    } // If the active accordion is not in the current array of accordions, do not do anything\n\n\n    const accordions = await this.getAccordions();\n    const startingIndex = accordions.findIndex(a => a === accordionEl);\n\n    if (startingIndex === -1) {\n      return;\n    }\n\n    let accordion;\n\n    if (ev.key === 'ArrowDown') {\n      accordion = this.findNextAccordion(accordions, startingIndex);\n    } else if (ev.key === 'ArrowUp') {\n      accordion = this.findPreviousAccordion(accordions, startingIndex);\n    } else if (ev.key === 'Home') {\n      accordion = accordions[0];\n    } else if (ev.key === 'End') {\n      accordion = accordions[accordions.length - 1];\n    }\n\n    if (accordion !== undefined && accordion !== activeElement) {\n      accordion.focus();\n    }\n  }\n\n  async componentDidLoad() {\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n\n    if (this.readonly) {\n      this.readonlyChanged();\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  async requestAccordionToggle(accordionValue, accordionExpand) {\n    const {\n      multiple,\n      value,\n      readonly,\n      disabled\n    } = this;\n\n    if (readonly || disabled) {\n      return;\n    }\n\n    if (accordionExpand) {\n      /**\n       * If group accepts multiple values\n       * check to see if value is already in\n       * in values array. If not, add it\n       * to the array.\n       */\n      if (multiple) {\n        const groupValue = value || [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        const valueExists = processedValue.find(v => v === accordionValue);\n\n        if (valueExists === undefined && accordionValue !== undefined) {\n          this.value = [...processedValue, accordionValue];\n        }\n      } else {\n        this.value = accordionValue;\n      }\n    } else {\n      /**\n       * If collapsing accordion, either filter the value\n       * out of the values array or unset the value.\n       */\n      if (multiple) {\n        const groupValue = value || [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        this.value = processedValue.filter(v => v !== accordionValue);\n      } else {\n        this.value = undefined;\n      }\n    }\n  }\n\n  findNextAccordion(accordions, startingIndex) {\n    const nextAccordion = accordions[startingIndex + 1]; // tslint:disable-next-line:strict-type-predicates\n\n    if (nextAccordion === undefined) {\n      return accordions[0];\n    }\n\n    return nextAccordion;\n  }\n\n  findPreviousAccordion(accordions, startingIndex) {\n    const prevAccordion = accordions[startingIndex - 1]; // tslint:disable-next-line:strict-type-predicates\n\n    if (prevAccordion === undefined) {\n      return accordions[accordions.length - 1];\n    }\n\n    return prevAccordion;\n  }\n  /**\n   * @internal\n   */\n\n\n  async getAccordions() {\n    return Array.from(this.el.querySelectorAll(':scope > ion-accordion'));\n  }\n\n  render() {\n    const {\n      disabled,\n      readonly,\n      expand\n    } = this;\n    const mode = getIonMode(this);\n    return h(Host, {\n      class: {\n        [mode]: true,\n        'accordion-group-disabled': disabled,\n        'accordion-group-readonly': readonly,\n        [`accordion-group-expand-${expand}`]: true\n      },\n      role: \"presentation\"\n    }, h(\"slot\", null));\n  }\n\n  get el() {\n    return this;\n  }\n\n  static get watchers() {\n    return {\n      \"value\": [\"valueChanged\"],\n      \"disabled\": [\"disabledChanged\"],\n      \"readonly\": [\"readonlyChanged\"]\n    };\n  }\n\n  static get style() {\n    return {\n      ios: accordionGroupIosCss,\n      md: accordionGroupMdCss\n    };\n  }\n\n};\nAccordionGroup = /*@__PURE__*/proxyCustomElement(AccordionGroup, [33, \"ion-accordion-group\", {\n  \"animated\": [4],\n  \"multiple\": [4],\n  \"value\": [1025],\n  \"disabled\": [4],\n  \"readonly\": [4],\n  \"expand\": [1],\n  \"requestAccordionToggle\": [64],\n  \"getAccordions\": [64]\n}, [[0, \"keydown\", \"onKeydown\"]]]);\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  const components = [\"ion-accordion-group\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-accordion-group\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, AccordionGroup);\n        }\n\n        break;\n    }\n  });\n}\n\nconst IonAccordionGroup = AccordionGroup;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonAccordionGroup, defineCustomElement };","map":{"version":3,"sources":["/home/jero/Documentos/Jimenez Sanitarios/frontend/node_modules/@ionic/core/components/ion-accordion-group.js"],"names":["HTMLElement","createEvent","h","Host","proxyCustomElement","b","getIonMode","accordionGroupIosCss","accordionGroupMdCss","AccordionGroup","constructor","__registerHost","__attachShadow","ionChange","animated","disabled","readonly","expand","valueChanged","value","multiple","Array","isArray","emit","disabledChanged","accordions","getAccordions","accordion","readonlyChanged","onKeydown","ev","activeElement","document","accordionEl","tagName","closest","closestGroup","el","startingIndex","findIndex","a","key","findNextAccordion","findPreviousAccordion","length","undefined","focus","componentDidLoad","requestAccordionToggle","accordionValue","accordionExpand","groupValue","processedValue","valueExists","find","v","filter","nextAccordion","prevAccordion","from","querySelectorAll","render","mode","class","role","watchers","style","ios","md","defineCustomElement$1","customElements","components","forEach","get","define","IonAccordionGroup","defineCustomElement"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,CAAnC,EAAsCC,IAAtC,EAA4CC,kBAA5C,QAAsE,+BAAtE;AACA,SAASC,CAAC,IAAIC,UAAd,QAAgC,mBAAhC;AAEA,MAAMC,oBAAoB,GAAG,mkBAA7B;AAEA,MAAMC,mBAAmB,GAAG,o1DAA5B;AAEA,IAAIC,cAAc,GAAG,cAAcT,WAAd,CAA0B;AAC7CU,EAAAA,WAAW,GAAG;AACZ;;AACA,SAAKC,cAAL;;AACA,SAAKC,cAAL;;AACA,SAAKC,SAAL,GAAiBZ,WAAW,CAAC,IAAD,EAAO,WAAP,EAAoB,CAApB,CAA5B;AACA;AACJ;AACA;AACA;AACA;;AACI,SAAKa,QAAL,GAAgB,IAAhB;AACA;AACJ;AACA;;AACI,SAAKC,QAAL,GAAgB,KAAhB;AACA;AACJ;AACA;AACA;;AACI,SAAKC,QAAL,GAAgB,KAAhB;AACA;AACJ;AACA;AACA;AACA;;AACI,SAAKC,MAAL,GAAc,SAAd;AACD;;AACDC,EAAAA,YAAY,GAAG;AACb,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,IAA5B;AACA;AACJ;AACA;AACA;AACA;AACA;;AACI,QAAI,CAACA,QAAD,IAAaC,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAjB,EAAuC;AACrC,WAAKA,KAAL,GAAaA,KAAK,CAAC,CAAD,CAAlB;AACD,KAFD,MAGK;AACH,WAAKN,SAAL,CAAeU,IAAf,CAAoB;AAAEJ,QAAAA,KAAK,EAAE,KAAKA;AAAd,OAApB;AACD;AACF;;AACoB,QAAfK,eAAe,GAAG;AACtB,UAAM;AAAET,MAAAA;AAAF,QAAe,IAArB;AACA,UAAMU,UAAU,GAAG,MAAM,KAAKC,aAAL,EAAzB;;AACA,SAAK,MAAMC,SAAX,IAAwBF,UAAxB,EAAoC;AAClCE,MAAAA,SAAS,CAACZ,QAAV,GAAqBA,QAArB;AACD;AACF;;AACoB,QAAfa,eAAe,GAAG;AACtB,UAAM;AAAEZ,MAAAA;AAAF,QAAe,IAArB;AACA,UAAMS,UAAU,GAAG,MAAM,KAAKC,aAAL,EAAzB;;AACA,SAAK,MAAMC,SAAX,IAAwBF,UAAxB,EAAoC;AAClCE,MAAAA,SAAS,CAACX,QAAV,GAAqBA,QAArB;AACD;AACF;;AACc,QAATa,SAAS,CAACC,EAAD,EAAK;AAClB,UAAMC,aAAa,GAAGC,QAAQ,CAACD,aAA/B;;AACA,QAAI,CAACA,aAAL,EAAoB;AAClB;AACD;;AACD,UAAME,WAAW,GAAIF,aAAa,CAACG,OAAd,KAA0B,eAA3B,GAA8CH,aAA9C,GAA8DA,aAAa,CAACI,OAAd,CAAsB,eAAtB,CAAlF;;AACA,QAAI,CAACF,WAAL,EAAkB;AAChB;AACD;;AACD,UAAMG,YAAY,GAAGH,WAAW,CAACE,OAAZ,CAAoB,qBAApB,CAArB;;AACA,QAAIC,YAAY,KAAK,KAAKC,EAA1B,EAA8B;AAC5B;AACD,KAZiB,CAalB;;;AACA,UAAMZ,UAAU,GAAG,MAAM,KAAKC,aAAL,EAAzB;AACA,UAAMY,aAAa,GAAGb,UAAU,CAACc,SAAX,CAAqBC,CAAC,IAAIA,CAAC,KAAKP,WAAhC,CAAtB;;AACA,QAAIK,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxB;AACD;;AACD,QAAIX,SAAJ;;AACA,QAAIG,EAAE,CAACW,GAAH,KAAW,WAAf,EAA4B;AAC1Bd,MAAAA,SAAS,GAAG,KAAKe,iBAAL,CAAuBjB,UAAvB,EAAmCa,aAAnC,CAAZ;AACD,KAFD,MAGK,IAAIR,EAAE,CAACW,GAAH,KAAW,SAAf,EAA0B;AAC7Bd,MAAAA,SAAS,GAAG,KAAKgB,qBAAL,CAA2BlB,UAA3B,EAAuCa,aAAvC,CAAZ;AACD,KAFI,MAGA,IAAIR,EAAE,CAACW,GAAH,KAAW,MAAf,EAAuB;AAC1Bd,MAAAA,SAAS,GAAGF,UAAU,CAAC,CAAD,CAAtB;AACD,KAFI,MAGA,IAAIK,EAAE,CAACW,GAAH,KAAW,KAAf,EAAsB;AACzBd,MAAAA,SAAS,GAAGF,UAAU,CAACA,UAAU,CAACmB,MAAX,GAAoB,CAArB,CAAtB;AACD;;AACD,QAAIjB,SAAS,KAAKkB,SAAd,IAA2BlB,SAAS,KAAKI,aAA7C,EAA4D;AAC1DJ,MAAAA,SAAS,CAACmB,KAAV;AACD;AACF;;AACqB,QAAhBC,gBAAgB,GAAG;AACvB,QAAI,KAAKhC,QAAT,EAAmB;AACjB,WAAKS,eAAL;AACD;;AACD,QAAI,KAAKR,QAAT,EAAmB;AACjB,WAAKY,eAAL;AACD;AACF;AACD;AACF;AACA;;;AAC8B,QAAtBoB,sBAAsB,CAACC,cAAD,EAAiBC,eAAjB,EAAkC;AAC5D,UAAM;AAAE9B,MAAAA,QAAF;AAAYD,MAAAA,KAAZ;AAAmBH,MAAAA,QAAnB;AAA6BD,MAAAA;AAA7B,QAA0C,IAAhD;;AACA,QAAIC,QAAQ,IAAID,QAAhB,EAA0B;AACxB;AACD;;AACD,QAAImC,eAAJ,EAAqB;AACnB;AACN;AACA;AACA;AACA;AACA;AACM,UAAI9B,QAAJ,EAAc;AACZ,cAAM+B,UAAU,GAAGhC,KAAK,IAAI,EAA5B;AACA,cAAMiC,cAAc,GAAG/B,KAAK,CAACC,OAAN,CAAc6B,UAAd,IAA4BA,UAA5B,GAAyC,CAACA,UAAD,CAAhE;AACA,cAAME,WAAW,GAAGD,cAAc,CAACE,IAAf,CAAoBC,CAAC,IAAIA,CAAC,KAAKN,cAA/B,CAApB;;AACA,YAAII,WAAW,KAAKR,SAAhB,IAA6BI,cAAc,KAAKJ,SAApD,EAA+D;AAC7D,eAAK1B,KAAL,GAAa,CAAC,GAAGiC,cAAJ,EAAoBH,cAApB,CAAb;AACD;AACF,OAPD,MAQK;AACH,aAAK9B,KAAL,GAAa8B,cAAb;AACD;AACF,KAlBD,MAmBK;AACH;AACN;AACA;AACA;AACM,UAAI7B,QAAJ,EAAc;AACZ,cAAM+B,UAAU,GAAGhC,KAAK,IAAI,EAA5B;AACA,cAAMiC,cAAc,GAAG/B,KAAK,CAACC,OAAN,CAAc6B,UAAd,IAA4BA,UAA5B,GAAyC,CAACA,UAAD,CAAhE;AACA,aAAKhC,KAAL,GAAaiC,cAAc,CAACI,MAAf,CAAsBD,CAAC,IAAIA,CAAC,KAAKN,cAAjC,CAAb;AACD,OAJD,MAKK;AACH,aAAK9B,KAAL,GAAa0B,SAAb;AACD;AACF;AACF;;AACDH,EAAAA,iBAAiB,CAACjB,UAAD,EAAaa,aAAb,EAA4B;AAC3C,UAAMmB,aAAa,GAAGhC,UAAU,CAACa,aAAa,GAAG,CAAjB,CAAhC,CAD2C,CAE3C;;AACA,QAAImB,aAAa,KAAKZ,SAAtB,EAAiC;AAC/B,aAAOpB,UAAU,CAAC,CAAD,CAAjB;AACD;;AACD,WAAOgC,aAAP;AACD;;AACDd,EAAAA,qBAAqB,CAAClB,UAAD,EAAaa,aAAb,EAA4B;AAC/C,UAAMoB,aAAa,GAAGjC,UAAU,CAACa,aAAa,GAAG,CAAjB,CAAhC,CAD+C,CAE/C;;AACA,QAAIoB,aAAa,KAAKb,SAAtB,EAAiC;AAC/B,aAAOpB,UAAU,CAACA,UAAU,CAACmB,MAAX,GAAoB,CAArB,CAAjB;AACD;;AACD,WAAOc,aAAP;AACD;AACD;AACF;AACA;;;AACqB,QAAbhC,aAAa,GAAG;AACpB,WAAOL,KAAK,CAACsC,IAAN,CAAW,KAAKtB,EAAL,CAAQuB,gBAAR,CAAyB,wBAAzB,CAAX,CAAP;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE9C,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA;AAAtB,QAAiC,IAAvC;AACA,UAAM6C,IAAI,GAAGxD,UAAU,CAAC,IAAD,CAAvB;AACA,WAAQJ,CAAC,CAACC,IAAD,EAAO;AAAE4D,MAAAA,KAAK,EAAE;AACrB,SAACD,IAAD,GAAQ,IADa;AAErB,oCAA4B/C,QAFP;AAGrB,oCAA4BC,QAHP;AAIrB,SAAE,0BAAyBC,MAAO,EAAlC,GAAsC;AAJjB,OAAT;AAKX+C,MAAAA,IAAI,EAAE;AALK,KAAP,EAKoB9D,CAAC,CAAC,MAAD,EAAS,IAAT,CALrB,CAAT;AAMD;;AACK,MAAFmC,EAAE,GAAG;AAAE,WAAO,IAAP;AAAc;;AACN,aAAR4B,QAAQ,GAAG;AAAE,WAAO;AAC7B,eAAS,CAAC,cAAD,CADoB;AAE7B,kBAAY,CAAC,iBAAD,CAFiB;AAG7B,kBAAY,CAAC,iBAAD;AAHiB,KAAP;AAIpB;;AACY,aAALC,KAAK,GAAG;AAAE,WAAO;AAC1BC,MAAAA,GAAG,EAAE5D,oBADqB;AAE1B6D,MAAAA,EAAE,EAAE5D;AAFsB,KAAP;AAGjB;;AAxLyC,CAA/C;AA0LAC,cAAc,GAAG,aAAcL,kBAAkB,CAACK,cAAD,EAAiB,CAAC,EAAD,EAAK,qBAAL,EAA4B;AAC1F,cAAY,CAAC,CAAD,CAD8E;AAE1F,cAAY,CAAC,CAAD,CAF8E;AAG1F,WAAS,CAAC,IAAD,CAHiF;AAI1F,cAAY,CAAC,CAAD,CAJ8E;AAK1F,cAAY,CAAC,CAAD,CAL8E;AAM1F,YAAU,CAAC,CAAD,CANgF;AAO1F,4BAA0B,CAAC,EAAD,CAPgE;AAQ1F,mBAAiB,CAAC,EAAD;AARyE,CAA5B,EAS7D,CAAC,CAAC,CAAD,EAAI,SAAJ,EAAe,WAAf,CAAD,CAT6D,CAAjB,CAAjD;;AAUA,SAAS4D,qBAAT,GAAiC;AAC/B,MAAI,OAAOC,cAAP,KAA0B,WAA9B,EAA2C;AACzC;AACD;;AACD,QAAMC,UAAU,GAAG,CAAC,qBAAD,CAAnB;AACAA,EAAAA,UAAU,CAACC,OAAX,CAAmBtC,OAAO,IAAI;AAAE,YAAQA,OAAR;AAC9B,WAAK,qBAAL;AACE,YAAI,CAACoC,cAAc,CAACG,GAAf,CAAmBvC,OAAnB,CAAL,EAAkC;AAChCoC,UAAAA,cAAc,CAACI,MAAf,CAAsBxC,OAAtB,EAA+BzB,cAA/B;AACD;;AACD;AAL4B;AAM7B,GANH;AAOD;;AAED,MAAMkE,iBAAiB,GAAGlE,cAA1B;AACA,MAAMmE,mBAAmB,GAAGP,qBAA5B;AAEA,SAASM,iBAAT,EAA4BC,mBAA5B","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { HTMLElement, createEvent, h, Host, proxyCustomElement } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\n\nconst accordionGroupIosCss = \":host{display:block}:host(.accordion-group-expand-inset){margin-left:16px;margin-right:16px;margin-top:16px;margin-bottom:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.accordion-group-expand-inset){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){border-bottom:none}\";\n\nconst accordionGroupMdCss = \":host{display:block}:host(.accordion-group-expand-inset){margin-left:16px;margin-right:16px;margin-top:16px;margin-bottom:16px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.accordion-group-expand-inset){margin-left:unset;margin-right:unset;-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:16px;margin-inline-end:16px}}:host(.accordion-group-expand-inset) ::slotted(ion-accordion){-webkit-box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanding),:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-expanded){margin-left:0;margin-right:0;margin-top:16px;margin-bottom:16px;border-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-previous),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-previous){border-bottom-right-radius:6px;border-bottom-left-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host-context([dir=rtl]):host(.accordion-group-expand-inset) ::slotted(ion-accordion.accordion-next),:host-context([dir=rtl]).accordion-group-expand-inset ::slotted(ion-accordion.accordion-next){border-top-left-radius:6px;border-top-right-radius:6px}:host(.accordion-group-expand-inset) ::slotted(ion-accordion):first-of-type{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\";\n\nlet AccordionGroup = class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    /**\n     * If `true`, all accordions inside of the\n     * accordion group will animate when expanding\n     * or collapsing.\n     */\n    this.animated = true;\n    /**\n     * If `true`, the accordion group cannot be interacted with.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the accordion group cannot be interacted with,\n     * but does not alter the opacity.\n     */\n    this.readonly = false;\n    /**\n     * Describes the expansion behavior for each accordion.\n     * Possible values are `\"compact\"` and `\"inset\"`.\n     * Defaults to `\"compact\"`.\n     */\n    this.expand = 'compact';\n  }\n  valueChanged() {\n    const { value, multiple } = this;\n    /**\n     * If accordion group does not\n     * let multiple accordions be open\n     * at once, but user passes an array\n     * just grab the first value.\n     */\n    if (!multiple && Array.isArray(value)) {\n      this.value = value[0];\n    }\n    else {\n      this.ionChange.emit({ value: this.value });\n    }\n  }\n  async disabledChanged() {\n    const { disabled } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.disabled = disabled;\n    }\n  }\n  async readonlyChanged() {\n    const { readonly } = this;\n    const accordions = await this.getAccordions();\n    for (const accordion of accordions) {\n      accordion.readonly = readonly;\n    }\n  }\n  async onKeydown(ev) {\n    const activeElement = document.activeElement;\n    if (!activeElement) {\n      return;\n    }\n    const accordionEl = (activeElement.tagName === 'ION-ACCORDION') ? activeElement : activeElement.closest('ion-accordion');\n    if (!accordionEl) {\n      return;\n    }\n    const closestGroup = accordionEl.closest('ion-accordion-group');\n    if (closestGroup !== this.el) {\n      return;\n    }\n    // If the active accordion is not in the current array of accordions, do not do anything\n    const accordions = await this.getAccordions();\n    const startingIndex = accordions.findIndex(a => a === accordionEl);\n    if (startingIndex === -1) {\n      return;\n    }\n    let accordion;\n    if (ev.key === 'ArrowDown') {\n      accordion = this.findNextAccordion(accordions, startingIndex);\n    }\n    else if (ev.key === 'ArrowUp') {\n      accordion = this.findPreviousAccordion(accordions, startingIndex);\n    }\n    else if (ev.key === 'Home') {\n      accordion = accordions[0];\n    }\n    else if (ev.key === 'End') {\n      accordion = accordions[accordions.length - 1];\n    }\n    if (accordion !== undefined && accordion !== activeElement) {\n      accordion.focus();\n    }\n  }\n  async componentDidLoad() {\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n    if (this.readonly) {\n      this.readonlyChanged();\n    }\n  }\n  /**\n   * @internal\n   */\n  async requestAccordionToggle(accordionValue, accordionExpand) {\n    const { multiple, value, readonly, disabled } = this;\n    if (readonly || disabled) {\n      return;\n    }\n    if (accordionExpand) {\n      /**\n       * If group accepts multiple values\n       * check to see if value is already in\n       * in values array. If not, add it\n       * to the array.\n       */\n      if (multiple) {\n        const groupValue = value || [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        const valueExists = processedValue.find(v => v === accordionValue);\n        if (valueExists === undefined && accordionValue !== undefined) {\n          this.value = [...processedValue, accordionValue];\n        }\n      }\n      else {\n        this.value = accordionValue;\n      }\n    }\n    else {\n      /**\n       * If collapsing accordion, either filter the value\n       * out of the values array or unset the value.\n       */\n      if (multiple) {\n        const groupValue = value || [];\n        const processedValue = Array.isArray(groupValue) ? groupValue : [groupValue];\n        this.value = processedValue.filter(v => v !== accordionValue);\n      }\n      else {\n        this.value = undefined;\n      }\n    }\n  }\n  findNextAccordion(accordions, startingIndex) {\n    const nextAccordion = accordions[startingIndex + 1];\n    // tslint:disable-next-line:strict-type-predicates\n    if (nextAccordion === undefined) {\n      return accordions[0];\n    }\n    return nextAccordion;\n  }\n  findPreviousAccordion(accordions, startingIndex) {\n    const prevAccordion = accordions[startingIndex - 1];\n    // tslint:disable-next-line:strict-type-predicates\n    if (prevAccordion === undefined) {\n      return accordions[accordions.length - 1];\n    }\n    return prevAccordion;\n  }\n  /**\n   * @internal\n   */\n  async getAccordions() {\n    return Array.from(this.el.querySelectorAll(':scope > ion-accordion'));\n  }\n  render() {\n    const { disabled, readonly, expand } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'accordion-group-disabled': disabled,\n        'accordion-group-readonly': readonly,\n        [`accordion-group-expand-${expand}`]: true\n      }, role: \"presentation\" }, h(\"slot\", null)));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"value\": [\"valueChanged\"],\n    \"disabled\": [\"disabledChanged\"],\n    \"readonly\": [\"readonlyChanged\"]\n  }; }\n  static get style() { return {\n    ios: accordionGroupIosCss,\n    md: accordionGroupMdCss\n  }; }\n};\nAccordionGroup = /*@__PURE__*/ proxyCustomElement(AccordionGroup, [33, \"ion-accordion-group\", {\n    \"animated\": [4],\n    \"multiple\": [4],\n    \"value\": [1025],\n    \"disabled\": [4],\n    \"readonly\": [4],\n    \"expand\": [1],\n    \"requestAccordionToggle\": [64],\n    \"getAccordions\": [64]\n  }, [[0, \"keydown\", \"onKeydown\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-accordion-group\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-accordion-group\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, AccordionGroup);\n      }\n      break;\n  } });\n}\n\nconst IonAccordionGroup = AccordionGroup;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonAccordionGroup, defineCustomElement };\n"]},"metadata":{},"sourceType":"module"}