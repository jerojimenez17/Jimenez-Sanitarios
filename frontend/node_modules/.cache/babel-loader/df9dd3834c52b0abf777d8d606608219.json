{"ast":null,"code":"import _defineProperty from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { HTMLElement, h, Host, proxyCustomElement } from '@stencil/core/internal/client';\nimport { c as config, b as getIonMode } from './ionic-global.js';\nimport { h as hostContext } from './theme.js';\nvar skeletonTextCss = \":host{--background:rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.065);border-radius:var(--border-radius, inherit);display:block;width:100%;height:inherit;margin-top:4px;margin-bottom:4px;background:var(--background);line-height:10px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none}span{display:inline-block}:host(.in-media){margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;height:100%}:host(.skeleton-text-animated){position:relative;background:-webkit-gradient(linear, left top, right top, color-stop(8%, rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.065)), color-stop(18%, rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.135)), color-stop(33%, rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.065)));background:linear-gradient(to right, rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.065) 8%, rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.135) 18%, rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.065) 33%);background-size:800px 104px;-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:shimmer;animation-name:shimmer;-webkit-animation-timing-function:linear;animation-timing-function:linear}@-webkit-keyframes shimmer{0%{background-position:-400px 0}100%{background-position:400px 0}}@keyframes shimmer{0%{background-position:-400px 0}100%{background-position:400px 0}}\";\n\nvar SkeletonText = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(SkeletonText, _HTMLElement);\n\n  var _super = _createSuper(SkeletonText);\n\n  function SkeletonText() {\n    var _this;\n\n    _classCallCheck(this, SkeletonText);\n\n    _this = _super.call(this);\n\n    _this.__registerHost();\n\n    _this.__attachShadow();\n    /**\n     * If `true`, the skeleton text will animate.\n     */\n\n\n    _this.animated = false;\n    return _this;\n  }\n\n  _createClass(SkeletonText, [{\n    key: \"render\",\n    value: function render() {\n      var _class;\n\n      var animated = this.animated && config.getBoolean('animated', true);\n      var inMedia = hostContext('ion-avatar', this.el) || hostContext('ion-thumbnail', this.el);\n      var mode = getIonMode(this);\n      return h(Host, {\n        class: (_class = {}, _defineProperty(_class, mode, true), _defineProperty(_class, 'skeleton-text-animated', animated), _defineProperty(_class, 'in-media', inMedia), _class)\n      }, h(\"span\", null, \"\\xA0\"));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"style\",\n    get: function get() {\n      return skeletonTextCss;\n    }\n  }]);\n\n  return SkeletonText;\n}(HTMLElement);\n\nSkeletonText = /*@__PURE__*/proxyCustomElement(SkeletonText, [1, \"ion-skeleton-text\", {\n  \"animated\": [4]\n}]);\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  var components = [\"ion-skeleton-text\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-skeleton-text\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, SkeletonText);\n        }\n\n        break;\n    }\n  });\n}\n\nvar IonSkeletonText = SkeletonText;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonSkeletonText, defineCustomElement };","map":{"version":3,"sources":["/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@ionic/core/components/ion-skeleton-text.js"],"names":["HTMLElement","h","Host","proxyCustomElement","c","config","b","getIonMode","hostContext","skeletonTextCss","SkeletonText","__registerHost","__attachShadow","animated","getBoolean","inMedia","el","mode","class","defineCustomElement$1","customElements","components","forEach","tagName","get","define","IonSkeletonText","defineCustomElement"],"mappings":";;;;;;AAAA;AACA;AACA;AACA,SAASA,WAAT,EAAsBC,CAAtB,EAAyBC,IAAzB,EAA+BC,kBAA/B,QAAyD,+BAAzD;AACA,SAASC,CAAC,IAAIC,MAAd,EAAsBC,CAAC,IAAIC,UAA3B,QAA6C,mBAA7C;AACA,SAASN,CAAC,IAAIO,WAAd,QAAiC,YAAjC;AAEA,IAAMC,eAAe,GAAG,umDAAxB;;AAEA,IAAIC,YAAY;AAAA;;AAAA;;AACd,0BAAc;AAAA;;AAAA;;AACZ;;AACA,UAAKC,cAAL;;AACA,UAAKC,cAAL;AACA;AACJ;AACA;;;AACI,UAAKC,QAAL,GAAgB,KAAhB;AAPY;AAQb;;AATa;AAAA;AAAA,WAUd,kBAAS;AAAA;;AACP,UAAMA,QAAQ,GAAG,KAAKA,QAAL,IAAiBR,MAAM,CAACS,UAAP,CAAkB,UAAlB,EAA8B,IAA9B,CAAlC;AACA,UAAMC,OAAO,GAAGP,WAAW,CAAC,YAAD,EAAe,KAAKQ,EAApB,CAAX,IAAsCR,WAAW,CAAC,eAAD,EAAkB,KAAKQ,EAAvB,CAAjE;AACA,UAAMC,IAAI,GAAGV,UAAU,CAAC,IAAD,CAAvB;AACA,aAAQN,CAAC,CAACC,IAAD,EAAO;AAAEgB,QAAAA,KAAK,wCAClBD,IADkB,EACX,IADW,2BAEnB,wBAFmB,EAEOJ,QAFP,2BAGnB,UAHmB,EAGPE,OAHO;AAAP,OAAP,EAIFd,CAAC,CAAC,MAAD,EAAS,IAAT,EAAe,MAAf,CAJC,CAAT;AAKD;AAnBa;AAAA;AAAA,SAoBd,eAAS;AAAE,aAAO,IAAP;AAAc;AApBX;AAAA;AAAA,SAqBd,eAAmB;AAAE,aAAOQ,eAAP;AAAyB;AArBhC;;AAAA;AAAA,EAAiBT,WAAjB,CAAhB;;AAuBAU,YAAY,GAAG,aAAcP,kBAAkB,CAACO,YAAD,EAAe,CAAC,CAAD,EAAI,mBAAJ,EAAyB;AACnF,cAAY,CAAC,CAAD;AADuE,CAAzB,CAAf,CAA/C;;AAGA,SAASS,qBAAT,GAAiC;AAC/B,MAAI,OAAOC,cAAP,KAA0B,WAA9B,EAA2C;AACzC;AACD;;AACD,MAAMC,UAAU,GAAG,CAAC,mBAAD,CAAnB;AACAA,EAAAA,UAAU,CAACC,OAAX,CAAmB,UAAAC,OAAO,EAAI;AAAE,YAAQA,OAAR;AAC9B,WAAK,mBAAL;AACE,YAAI,CAACH,cAAc,CAACI,GAAf,CAAmBD,OAAnB,CAAL,EAAkC;AAChCH,UAAAA,cAAc,CAACK,MAAf,CAAsBF,OAAtB,EAA+Bb,YAA/B;AACD;;AACD;AAL4B;AAM7B,GANH;AAOD;;AAED,IAAMgB,eAAe,GAAGhB,YAAxB;AACA,IAAMiB,mBAAmB,GAAGR,qBAA5B;AAEA,SAASO,eAAT,EAA0BC,mBAA1B","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { HTMLElement, h, Host, proxyCustomElement } from '@stencil/core/internal/client';\nimport { c as config, b as getIonMode } from './ionic-global.js';\nimport { h as hostContext } from './theme.js';\n\nconst skeletonTextCss = \":host{--background:rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.065);border-radius:var(--border-radius, inherit);display:block;width:100%;height:inherit;margin-top:4px;margin-bottom:4px;background:var(--background);line-height:10px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none}span{display:inline-block}:host(.in-media){margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;height:100%}:host(.skeleton-text-animated){position:relative;background:-webkit-gradient(linear, left top, right top, color-stop(8%, rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.065)), color-stop(18%, rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.135)), color-stop(33%, rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.065)));background:linear-gradient(to right, rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.065) 8%, rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.135) 18%, rgba(var(--background-rgb, var(--ion-text-color-rgb, 0, 0, 0)), 0.065) 33%);background-size:800px 104px;-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:shimmer;animation-name:shimmer;-webkit-animation-timing-function:linear;animation-timing-function:linear}@-webkit-keyframes shimmer{0%{background-position:-400px 0}100%{background-position:400px 0}}@keyframes shimmer{0%{background-position:-400px 0}100%{background-position:400px 0}}\";\n\nlet SkeletonText = class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    /**\n     * If `true`, the skeleton text will animate.\n     */\n    this.animated = false;\n  }\n  render() {\n    const animated = this.animated && config.getBoolean('animated', true);\n    const inMedia = hostContext('ion-avatar', this.el) || hostContext('ion-thumbnail', this.el);\n    const mode = getIonMode(this);\n    return (h(Host, { class: {\n        [mode]: true,\n        'skeleton-text-animated': animated,\n        'in-media': inMedia\n      } }, h(\"span\", null, \"\\u00A0\")));\n  }\n  get el() { return this; }\n  static get style() { return skeletonTextCss; }\n};\nSkeletonText = /*@__PURE__*/ proxyCustomElement(SkeletonText, [1, \"ion-skeleton-text\", {\n    \"animated\": [4]\n  }]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-skeleton-text\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-skeleton-text\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, SkeletonText);\n      }\n      break;\n  } });\n}\n\nconst IonSkeletonText = SkeletonText;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonSkeletonText, defineCustomElement };\n"]},"metadata":{},"sourceType":"module"}