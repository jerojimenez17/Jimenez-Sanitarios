{"ast":null,"code":"export default function JM() {\n  let obj = {\n    table: []\n  };\n\n  const xslx = require('xlsx');\n\n  const filePath = process.argv.slice(2)[0];\n  const workbook = xslx.readFile(filePath);\n  const sheet = workbook.Sheets[workbook.SheetNames[0]];\n  let posts = [];\n  let post = {};\n\n  for (let cell in sheet) {\n    const cellAsString = cell.toString();\n\n    if (cellAsString !== \"f\" && cellAsString !== \"g\" && cellAsString[1] > \"1\") {\n      switch (cellAsString[0]) {\n        case 'A':\n          post.cod = sheet[cell].v;\n          break;\n\n        case 'B':\n          post.description = sheet[cell].v;\n          break;\n\n        case 'C':\n          post.brand = sheet[cell].v;\n          break;\n\n        case 'D':\n          post.iva = sheet[cell].v;\n          break;\n\n        case 'E':\n          post.price = sheet[cell].v;\n          posts.push(post);\n          post = {};\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n  /* console.log(posts);\n   let json = JSON.stringify(obj);\n   let fs = require('fs');\n   fs.writeFile (\"jm.json\", json, function(err) {\n       if (err) throw err;\n       console.log('complete');\n       }\n   );\n   */\n\n\n  return posts;\n}\n_c = JM;\n\nvar _c;\n\n$RefreshReg$(_c, \"JM\");","map":{"version":3,"sources":["/home/jero/Documentos/IonicReactApp/cursoreact/src/pages/products/ReaderJM/ReaderJM.ts"],"names":["JM","obj","table","xslx","require","filePath","process","argv","slice","workbook","readFile","sheet","Sheets","SheetNames","posts","post","cell","cellAsString","toString","cod","v","description","brand","iva","price","push"],"mappings":"AACA,eAAe,SAAUA,EAAV,GAAwB;AAEnC,MAAIC,GAAG,GAAG;AACNC,IAAAA,KAAK,EAAC;AADA,GAAV;;AAGA,QAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,QAAMC,QAAQ,GAAGC,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,CAAjB;AACA,QAAMC,QAAQ,GAAGN,IAAI,CAACO,QAAL,CAAcL,QAAd,CAAjB;AAEA,QAAMM,KAAK,GAAGF,QAAQ,CAACG,MAAT,CAAgBH,QAAQ,CAACI,UAAT,CAAoB,CAApB,CAAhB,CAAd;AAEA,MAAIC,KAAe,GAAG,EAAtB;AACA,MAAIC,IAAY,GAAG,EAAnB;;AAEA,OAAK,IAAIC,IAAT,IAAiBL,KAAjB,EAAwB;AACpB,UAAMM,YAAY,GAAGD,IAAI,CAACE,QAAL,EAArB;;AACA,QAAID,YAAY,KAAK,GAAjB,IAAwBA,YAAY,KAAK,GAAzC,IAAgDA,YAAY,CAAC,CAAD,CAAZ,GAAkB,GAAtE,EAA2E;AACvE,cAAQA,YAAY,CAAC,CAAD,CAApB;AACI,aAAK,GAAL;AAAUF,UAAAA,IAAI,CAACI,GAAL,GAAWR,KAAK,CAACK,IAAD,CAAL,CAAYI,CAAvB;AACN;;AACJ,aAAK,GAAL;AAAUL,UAAAA,IAAI,CAACM,WAAL,GAAmBV,KAAK,CAACK,IAAD,CAAL,CAAYI,CAA/B;AACN;;AACJ,aAAK,GAAL;AAAUL,UAAAA,IAAI,CAACO,KAAL,GAAaX,KAAK,CAACK,IAAD,CAAL,CAAYI,CAAzB;AACN;;AACJ,aAAK,GAAL;AAAUL,UAAAA,IAAI,CAACQ,GAAL,GAAWZ,KAAK,CAACK,IAAD,CAAL,CAAYI,CAAvB;AACN;;AACJ,aAAK,GAAL;AACIL,UAAAA,IAAI,CAACS,KAAL,GAAab,KAAK,CAACK,IAAD,CAAL,CAAYI,CAAzB;AACAN,UAAAA,KAAK,CAACW,IAAN,CAAWV,IAAX;AACAA,UAAAA,IAAI,GAAG,EAAP;AACA;;AACJ;AACI;AAfR;AAiBH;AACJ;AACF;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACG,SAAOD,KAAP;AACF;KA9CwBd,E","sourcesContent":["import Product from \"../Product\";\nexport default function  JM():Product[]{\n\n    let obj = {\n        table:[]\n    };\n    const xslx = require('xlsx');\n    const filePath = process.argv.slice(2)[0];\n    const workbook = xslx.readFile(filePath);\n    \n    const sheet = workbook.Sheets[workbook.SheetNames[0]];\n    \n    let posts:Product[] = [];\n    let post:Product = {};\n    \n    for (let cell in sheet) {\n        const cellAsString = cell.toString();\n        if (cellAsString !== \"f\" && cellAsString !== \"g\" && cellAsString[1] > \"1\") {\n            switch (cellAsString[0]) {\n                case 'A': post.cod = sheet[cell].v;\n                    break;\n                case 'B': post.description = sheet[cell].v;\n                    break;\n                case 'C': post.brand = sheet[cell].v;\n                    break;\n                case 'D': post.iva = sheet[cell].v;\n                    break;\n                case 'E':\n                    post.price = sheet[cell].v;\n                    posts.push(post);\n                    post = {};\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n   /* console.log(posts);\n    let json = JSON.stringify(obj);\n    let fs = require('fs');\n    fs.writeFile (\"jm.json\", json, function(err) {\n        if (err) throw err;\n        console.log('complete');\n        }\n    );\n    */\n   return posts;\n}"]},"metadata":{},"sourceType":"module"}