{"ast":null,"code":"import _defineProperty from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _asyncToGenerator from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/regenerator/index.js\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { writeTask, HTMLElement, createEvent, readTask, h, Host, proxyCustomElement } from '@stencil/core/internal/client';\nimport { a as isPlatform, b as getIonMode } from './ionic-global.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { t as transitionEndAsync, c as componentOnReady, d as clamp, g as getElementRoot, r as raf } from './helpers.js';\nimport { c as hapticImpact } from './haptic.js';\nimport { c as createAnimation } from './animation.js';\n\nvar getRefresherAnimationType = function getRefresherAnimationType(contentEl) {\n  var previousSibling = contentEl.previousElementSibling;\n  var hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\n\nvar createPullingAnimation = function createPullingAnimation(type, pullingSpinner, refresherEl) {\n  return type === 'scale' ? createScaleAnimation(pullingSpinner, refresherEl) : createTranslateAnimation(pullingSpinner, refresherEl);\n};\n\nvar createBaseAnimation = function createBaseAnimation(pullingRefresherIcon) {\n  var spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  var circle = spinner.shadowRoot.querySelector('circle');\n  var spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  var arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  var arrow = arrowContainer ? arrowContainer.querySelector('ion-icon') : null;\n  var baseAnimation = createAnimation().duration(1000).easing('ease-out');\n  var spinnerArrowContainerAnimation = createAnimation().addElement(spinnerArrowContainer).keyframes([{\n    offset: 0,\n    opacity: '0.3'\n  }, {\n    offset: 0.45,\n    opacity: '0.3'\n  }, {\n    offset: 0.55,\n    opacity: '1'\n  }, {\n    offset: 1,\n    opacity: '1'\n  }]);\n  var circleInnerAnimation = createAnimation().addElement(circle).keyframes([{\n    offset: 0,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.20,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.55,\n    strokeDasharray: '100px, 200px'\n  }, {\n    offset: 1,\n    strokeDasharray: '100px, 200px'\n  }]);\n  var circleOuterAnimation = createAnimation().addElement(spinner).keyframes([{\n    offset: 0,\n    transform: 'rotate(-90deg)'\n  }, {\n    offset: 1,\n    transform: 'rotate(210deg)'\n  }]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n\n  if (arrowContainer && arrow) {\n    var arrowContainerAnimation = createAnimation().addElement(arrowContainer).keyframes([{\n      offset: 0,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.30,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.55,\n      transform: 'rotate(280deg)'\n    }, {\n      offset: 1,\n      transform: 'rotate(400deg)'\n    }]);\n    var arrowAnimation = createAnimation().addElement(arrow).keyframes([{\n      offset: 0,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.30,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.55,\n      transform: 'translateX(-1.5px) scale(1)'\n    }, {\n      offset: 1,\n      transform: 'translateX(-1.5px) scale(1)'\n    }]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\n\nvar createScaleAnimation = function createScaleAnimation(pullingRefresherIcon, refresherEl) {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  var height = refresherEl.clientHeight;\n  var spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: \"scale(0) translateY(-\".concat(height, \"px)\")\n  }, {\n    offset: 1,\n    transform: 'scale(1) translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\n\nvar createTranslateAnimation = function createTranslateAnimation(pullingRefresherIcon, refresherEl) {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  var height = refresherEl.clientHeight;\n  var spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: \"translateY(-\".concat(height, \"px)\")\n  }, {\n    offset: 1,\n    transform: 'translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\n\nvar createSnapBackAnimation = function createSnapBackAnimation(pullingRefresherIcon) {\n  return createAnimation().duration(125).addElement(pullingRefresherIcon).fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n}; // iOS Native Refresher\n// -----------------------------\n\n\nvar setSpinnerOpacity = function setSpinnerOpacity(spinner, opacity) {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\n\nvar handleScrollWhilePulling = function handleScrollWhilePulling(ticks, numTicks, pullAmount) {\n  var max = 1;\n  writeTask(function () {\n    ticks.forEach(function (el, i) {\n      /**\n       * Compute the opacity of each tick\n       * mark as a percentage of the pullAmount\n       * offset by max / numTicks so\n       * the tick marks are shown staggered.\n       */\n      var min = i * (max / numTicks);\n      var range = max - min;\n      var start = pullAmount - min;\n      var progression = clamp(0, start / range, 1);\n      el.style.setProperty('opacity', progression.toString());\n    });\n  });\n};\n\nvar handleScrollWhileRefreshing = function handleScrollWhileRefreshing(spinner, lastVelocityY) {\n  writeTask(function () {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', lastVelocityY >= 1.0 ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\n\nvar translateElement = function translateElement(el, value) {\n  var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;\n\n  if (!el) {\n    return Promise.resolve();\n  }\n\n  var trans = transitionEndAsync(el, duration);\n  writeTask(function () {\n    el.style.setProperty('transition', \"\".concat(duration, \"ms all ease-out\"));\n\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    } else {\n      el.style.setProperty('transform', \"translate3d(0px, \".concat(value, \", 0px)\"));\n    }\n  });\n  return trans;\n}; // Utils\n// -----------------------------\n\n\nvar shouldUseNativeRefresher = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(referenceEl, mode) {\n    var refresherContent, pullingSpinner, refreshingSpinner;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            refresherContent = referenceEl.querySelector('ion-refresher-content');\n\n            if (refresherContent) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", Promise.resolve(false));\n\n          case 3:\n            _context.next = 5;\n            return new Promise(function (resolve) {\n              return componentOnReady(refresherContent, resolve);\n            });\n\n          case 5:\n            pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n            refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n            return _context.abrupt(\"return\", pullingSpinner !== null && refreshingSpinner !== null && (mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined || mode === 'md'));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function shouldUseNativeRefresher(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native ion-spinner{width:32px;height:32px;color:var(--ion-color-step-450, #747577)}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0) rotate(180deg);transform:scale(0) rotate(180deg);-webkit-transition:300ms;transition:300ms}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\nvar refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid var(--ion-color-step-200, #ececec);background:var(--ion-color-step-250, #ffffff);-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nvar Refresher = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(Refresher, _HTMLElement);\n\n  var _super = _createSuper(Refresher);\n\n  function Refresher() {\n    var _this;\n\n    _classCallCheck(this, Refresher);\n\n    _this = _super.call(this);\n\n    _this.__registerHost();\n\n    _this.ionRefresh = createEvent(_assertThisInitialized(_this), \"ionRefresh\", 7);\n    _this.ionPull = createEvent(_assertThisInitialized(_this), \"ionPull\", 7);\n    _this.ionStart = createEvent(_assertThisInitialized(_this), \"ionStart\", 7);\n    _this.appliedStyles = false;\n    _this.didStart = false;\n    _this.progress = 0;\n    _this.pointerDown = false;\n    _this.needsCompletion = false;\n    _this.didRefresh = false;\n    _this.lastVelocityY = 0;\n    _this.animations = [];\n    _this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n\n    _this.state = 1\n    /* Inactive */\n    ;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    _this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    _this.pullMax = _this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    _this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    _this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    _this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n\n    _this.disabled = false;\n    return _this;\n  }\n\n  _createClass(Refresher, [{\n    key: \"disabledChanged\",\n    value: function disabledChanged() {\n      if (this.gesture) {\n        this.gesture.enable(!this.disabled);\n      }\n    }\n  }, {\n    key: \"checkNativeRefresher\",\n    value: function () {\n      var _checkNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var useNativeRefresher, contentEl;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return shouldUseNativeRefresher(this.el, getIonMode(this));\n\n              case 2:\n                useNativeRefresher = _context2.sent;\n\n                if (useNativeRefresher && !this.nativeRefresher) {\n                  contentEl = this.el.closest('ion-content');\n                  this.setupNativeRefresher(contentEl);\n                } else if (!useNativeRefresher) {\n                  this.destroyNativeRefresher();\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function checkNativeRefresher() {\n        return _checkNativeRefresher.apply(this, arguments);\n      }\n\n      return checkNativeRefresher;\n    }()\n  }, {\n    key: \"destroyNativeRefresher\",\n    value: function destroyNativeRefresher() {\n      if (this.scrollEl && this.scrollListenerCallback) {\n        this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n        this.scrollListenerCallback = undefined;\n      }\n\n      this.nativeRefresher = false;\n    }\n  }, {\n    key: \"resetNativeRefresher\",\n    value: function () {\n      var _resetNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(el, state) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.state = state;\n\n                if (!(getIonMode(this) === 'ios')) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 4;\n                return translateElement(el, undefined, 300);\n\n              case 4:\n                _context3.next = 8;\n                break;\n\n              case 6:\n                _context3.next = 8;\n                return transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n\n              case 8:\n                this.didRefresh = false;\n                this.needsCompletion = false;\n                this.pointerDown = false;\n                this.animations.forEach(function (ani) {\n                  return ani.destroy();\n                });\n                this.animations = [];\n                this.progress = 0;\n                this.state = 1\n                /* Inactive */\n                ;\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function resetNativeRefresher(_x3, _x4) {\n        return _resetNativeRefresher.apply(this, arguments);\n      }\n\n      return resetNativeRefresher;\n    }()\n  }, {\n    key: \"setupiOSNativeRefresher\",\n    value: function () {\n      var _setupiOSNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(pullingSpinner, refreshingSpinner) {\n        var _this2 = this;\n\n        var ticks, MAX_PULL, NUM_TICKS;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.elementToTransform = this.scrollEl;\n                ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n                MAX_PULL = this.scrollEl.clientHeight * 0.16;\n                NUM_TICKS = ticks.length;\n                writeTask(function () {\n                  return ticks.forEach(function (el) {\n                    return el.style.setProperty('animation', 'none');\n                  });\n                });\n\n                this.scrollListenerCallback = function () {\n                  // If pointer is not on screen or refresher is not active, ignore scroll\n                  if (!_this2.pointerDown && _this2.state === 1\n                  /* Inactive */\n                  ) {\n                    return;\n                  }\n\n                  readTask(function () {\n                    // PTR should only be active when overflow scrolling at the top\n                    var scrollTop = _this2.scrollEl.scrollTop;\n                    var refresherHeight = _this2.el.clientHeight;\n\n                    if (scrollTop > 0) {\n                      /**\n                       * If refresher is refreshing and user tries to scroll\n                       * progressively fade refresher out/in\n                       */\n                      if (_this2.state === 8\n                      /* Refreshing */\n                      ) {\n                        var ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n                        writeTask(function () {\n                          return setSpinnerOpacity(refreshingSpinner, 1 - ratio);\n                        });\n                        return;\n                      }\n\n                      return;\n                    }\n\n                    if (_this2.pointerDown) {\n                      if (!_this2.didStart) {\n                        _this2.didStart = true;\n\n                        _this2.ionStart.emit();\n                      } // emit \"pulling\" on every move\n\n\n                      if (_this2.pointerDown) {\n                        _this2.ionPull.emit();\n                      }\n                    }\n                    /**\n                     * We want to delay the start of this gesture by ~30px\n                     * when initially pulling down so the refresher does not\n                     * overlap with the content. But when letting go of the\n                     * gesture before the refresher completes, we want the\n                     * refresher tick marks to quickly fade out.\n                     */\n\n\n                    var offset = _this2.didStart ? 30 : 0;\n                    var pullAmount = _this2.progress = clamp(0, (Math.abs(scrollTop) - offset) / MAX_PULL, 1);\n                    var shouldShowRefreshingSpinner = _this2.state === 8\n                    /* Refreshing */\n                    || pullAmount === 1;\n\n                    if (shouldShowRefreshingSpinner) {\n                      if (_this2.pointerDown) {\n                        handleScrollWhileRefreshing(refreshingSpinner, _this2.lastVelocityY);\n                      }\n\n                      if (!_this2.didRefresh) {\n                        _this2.beginRefresh();\n\n                        _this2.didRefresh = true;\n                        hapticImpact({\n                          style: 'light'\n                        });\n                        /**\n                         * Translate the content element otherwise when pointer is removed\n                         * from screen the scroll content will bounce back over the refresher\n                         */\n\n                        if (!_this2.pointerDown) {\n                          translateElement(_this2.elementToTransform, \"\".concat(refresherHeight, \"px\"));\n                        }\n                      }\n                    } else {\n                      _this2.state = 2\n                      /* Pulling */\n                      ;\n                      handleScrollWhilePulling(ticks, NUM_TICKS, pullAmount);\n                    }\n                  });\n                };\n\n                this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n                _context4.next = 9;\n                return import('./index2.js');\n\n              case 9:\n                this.gesture = _context4.sent.createGesture({\n                  el: this.scrollEl,\n                  gestureName: 'refresher',\n                  gesturePriority: 31,\n                  direction: 'y',\n                  threshold: 5,\n                  onStart: function onStart() {\n                    _this2.pointerDown = true;\n\n                    if (!_this2.didRefresh) {\n                      translateElement(_this2.elementToTransform, '0px');\n                    }\n                    /**\n                     * If the content had `display: none` when\n                     * the refresher was initialized, its clientHeight\n                     * will be 0. When the gesture starts, the content\n                     * will be visible, so try to get the correct\n                     * client height again. This is most common when\n                     * using the refresher in an ion-menu.\n                     */\n\n\n                    if (MAX_PULL === 0) {\n                      MAX_PULL = _this2.scrollEl.clientHeight * 0.16;\n                    }\n                  },\n                  onMove: function onMove(ev) {\n                    _this2.lastVelocityY = ev.velocityY;\n                  },\n                  onEnd: function onEnd() {\n                    _this2.pointerDown = false;\n                    _this2.didStart = false;\n\n                    if (_this2.needsCompletion) {\n                      _this2.resetNativeRefresher(_this2.elementToTransform, 32\n                      /* Completing */\n                      );\n\n                      _this2.needsCompletion = false;\n                    } else if (_this2.didRefresh) {\n                      readTask(function () {\n                        return translateElement(_this2.elementToTransform, \"\".concat(_this2.el.clientHeight, \"px\"));\n                      });\n                    }\n                  }\n                });\n                this.disabledChanged();\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function setupiOSNativeRefresher(_x5, _x6) {\n        return _setupiOSNativeRefresher.apply(this, arguments);\n      }\n\n      return setupiOSNativeRefresher;\n    }()\n  }, {\n    key: \"setupMDNativeRefresher\",\n    value: function () {\n      var _setupMDNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(contentEl, pullingSpinner, refreshingSpinner) {\n        var _this3 = this;\n\n        var circle, pullingRefresherIcon, refreshingCircle;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                circle = getElementRoot(pullingSpinner).querySelector('circle');\n                pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n                refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n\n                if (circle !== null && refreshingCircle !== null) {\n                  writeTask(function () {\n                    circle.style.setProperty('animation', 'none'); // This lines up the animation on the refreshing spinner with the pulling spinner\n\n                    refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n                    refreshingCircle.style.setProperty('animation-delay', '-655ms');\n                  });\n                }\n\n                _context6.next = 6;\n                return import('./index2.js');\n\n              case 6:\n                this.gesture = _context6.sent.createGesture({\n                  el: this.scrollEl,\n                  gestureName: 'refresher',\n                  gesturePriority: 31,\n                  direction: 'y',\n                  threshold: 5,\n                  canStart: function canStart() {\n                    return _this3.state !== 8\n                    /* Refreshing */\n                    && _this3.state !== 32\n                    /* Completing */\n                    && _this3.scrollEl.scrollTop === 0;\n                  },\n                  onStart: function onStart(ev) {\n                    ev.data = {\n                      animation: undefined,\n                      didStart: false,\n                      cancelled: false\n                    };\n                  },\n                  onMove: function onMove(ev) {\n                    if (ev.velocityY < 0 && _this3.progress === 0 && !ev.data.didStart || ev.data.cancelled) {\n                      ev.data.cancelled = true;\n                      return;\n                    }\n\n                    if (!ev.data.didStart) {\n                      ev.data.didStart = true;\n                      _this3.state = 2\n                      /* Pulling */\n                      ;\n                      writeTask(function () {\n                        return _this3.scrollEl.style.setProperty('--overflow', 'hidden');\n                      });\n                      var animationType = getRefresherAnimationType(contentEl);\n                      var animation = createPullingAnimation(animationType, pullingRefresherIcon, _this3.el);\n                      ev.data.animation = animation;\n                      animation.progressStart(false, 0);\n\n                      _this3.ionStart.emit();\n\n                      _this3.animations.push(animation);\n\n                      return;\n                    } // Since we are using an easing curve, slow the gesture tracking down a bit\n\n\n                    _this3.progress = clamp(0, ev.deltaY / 180 * 0.5, 1);\n                    ev.data.animation.progressStep(_this3.progress);\n\n                    _this3.ionPull.emit();\n                  },\n                  onEnd: function onEnd(ev) {\n                    if (!ev.data.didStart) {\n                      return;\n                    }\n\n                    writeTask(function () {\n                      return _this3.scrollEl.style.removeProperty('--overflow');\n                    });\n\n                    if (_this3.progress <= 0.4) {\n                      _this3.gesture.enable(false);\n\n                      ev.data.animation.progressEnd(0, _this3.progress, 500).onFinish(function () {\n                        _this3.animations.forEach(function (ani) {\n                          return ani.destroy();\n                        });\n\n                        _this3.animations = [];\n\n                        _this3.gesture.enable(true);\n\n                        _this3.state = 1\n                        /* Inactive */\n                        ;\n                      });\n                      return;\n                    }\n\n                    var progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], _this3.progress)[0];\n                    var snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n\n                    _this3.animations.push(snapBackAnimation);\n\n                    writeTask( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n                      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                        while (1) {\n                          switch (_context5.prev = _context5.next) {\n                            case 0:\n                              pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', \"\".concat(progress * 100, \"px\"));\n                              ev.data.animation.progressEnd();\n                              _context5.next = 4;\n                              return snapBackAnimation.play();\n\n                            case 4:\n                              _this3.beginRefresh();\n\n                              ev.data.animation.destroy();\n\n                            case 6:\n                            case \"end\":\n                              return _context5.stop();\n                          }\n                        }\n                      }, _callee5);\n                    })));\n                  }\n                });\n                this.disabledChanged();\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function setupMDNativeRefresher(_x7, _x8, _x9) {\n        return _setupMDNativeRefresher.apply(this, arguments);\n      }\n\n      return setupMDNativeRefresher;\n    }()\n  }, {\n    key: \"setupNativeRefresher\",\n    value: function () {\n      var _setupNativeRefresher = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(contentEl) {\n        var pullingSpinner, refreshingSpinner;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl)) {\n                  _context7.next = 2;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\");\n\n              case 2:\n                /**\n                 * If using non-native refresher before make sure\n                 * we clean up any old CSS. This can happen when\n                 * a user manually calls the refresh method in a\n                 * component create callback before the native\n                 * refresher is setup.\n                 */\n                this.setCss(0, '', false, '');\n                this.nativeRefresher = true;\n                pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n                refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n\n                if (getIonMode(this) === 'ios') {\n                  this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n                } else {\n                  this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n                }\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function setupNativeRefresher(_x10) {\n        return _setupNativeRefresher.apply(this, arguments);\n      }\n\n      return setupNativeRefresher;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.checkNativeRefresher();\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function () {\n      var _connectedCallback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var _this4 = this;\n\n        var contentEl;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (!(this.el.getAttribute('slot') !== 'fixed')) {\n                  _context8.next = 3;\n                  break;\n                }\n\n                console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n                return _context8.abrupt(\"return\");\n\n              case 3:\n                contentEl = this.el.closest('ion-content');\n\n                if (contentEl) {\n                  _context8.next = 7;\n                  break;\n                }\n\n                console.error('<ion-refresher> must be used inside an <ion-content>');\n                return _context8.abrupt(\"return\");\n\n              case 7:\n                _context8.next = 9;\n                return new Promise(function (resolve) {\n                  return componentOnReady(contentEl, resolve);\n                });\n\n              case 9:\n                _context8.next = 11;\n                return contentEl.getScrollElement();\n\n              case 11:\n                this.scrollEl = _context8.sent;\n                this.backgroundContentEl = getElementRoot(contentEl).querySelector('#background-content');\n                _context8.next = 15;\n                return shouldUseNativeRefresher(this.el, getIonMode(this));\n\n              case 15:\n                if (!_context8.sent) {\n                  _context8.next = 19;\n                  break;\n                }\n\n                this.setupNativeRefresher(contentEl);\n                _context8.next = 23;\n                break;\n\n              case 19:\n                _context8.next = 21;\n                return import('./index2.js');\n\n              case 21:\n                this.gesture = _context8.sent.createGesture({\n                  el: contentEl,\n                  gestureName: 'refresher',\n                  gesturePriority: 31,\n                  direction: 'y',\n                  threshold: 20,\n                  passive: false,\n                  canStart: function canStart() {\n                    return _this4.canStart();\n                  },\n                  onStart: function onStart() {\n                    return _this4.onStart();\n                  },\n                  onMove: function onMove(ev) {\n                    return _this4.onMove(ev);\n                  },\n                  onEnd: function onEnd() {\n                    return _this4.onEnd();\n                  }\n                });\n                this.disabledChanged();\n\n              case 23:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function connectedCallback() {\n        return _connectedCallback.apply(this, arguments);\n      }\n\n      return connectedCallback;\n    }()\n  }, {\n    key: \"disconnectedCallback\",\n    value: function disconnectedCallback() {\n      this.destroyNativeRefresher();\n      this.scrollEl = undefined;\n\n      if (this.gesture) {\n        this.gesture.destroy();\n        this.gesture = undefined;\n      }\n    }\n    /**\n     * Call `complete()` when your async operation has completed.\n     * For example, the `refreshing` state is while the app is performing\n     * an asynchronous operation, such as receiving more data from an\n     * AJAX request. Once the data has been received, you then call this\n     * method to signify that the refreshing has completed and to close\n     * the refresher. This method also changes the refresher's state from\n     * `refreshing` to `completing`.\n     */\n\n  }, {\n    key: \"complete\",\n    value: function () {\n      var _complete = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var _this5 = this;\n\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                if (this.nativeRefresher) {\n                  this.needsCompletion = true; // Do not reset scroll el until user removes pointer from screen\n\n                  if (!this.pointerDown) {\n                    raf(function () {\n                      return raf(function () {\n                        return _this5.resetNativeRefresher(_this5.elementToTransform, 32\n                        /* Completing */\n                        );\n                      });\n                    });\n                  }\n                } else {\n                  this.close(32\n                  /* Completing */\n                  , '120ms');\n                }\n\n              case 1:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function complete() {\n        return _complete.apply(this, arguments);\n      }\n\n      return complete;\n    }()\n    /**\n     * Changes the refresher's state from `refreshing` to `cancelling`.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function () {\n      var _cancel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var _this6 = this;\n\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                if (this.nativeRefresher) {\n                  // Do not reset scroll el until user removes pointer from screen\n                  if (!this.pointerDown) {\n                    raf(function () {\n                      return raf(function () {\n                        return _this6.resetNativeRefresher(_this6.elementToTransform, 16\n                        /* Cancelling */\n                        );\n                      });\n                    });\n                  }\n                } else {\n                  this.close(16\n                  /* Cancelling */\n                  , '');\n                }\n\n              case 1:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function cancel() {\n        return _cancel.apply(this, arguments);\n      }\n\n      return cancel;\n    }()\n    /**\n     * A number representing how far down the user has pulled.\n     * The number `0` represents the user hasn't pulled down at all. The\n     * number `1`, and anything greater than `1`, represents that the user\n     * has pulled far enough down that when they let go then the refresh will\n     * happen. If they let go and the number is less than `1`, then the\n     * refresh will not happen, and the content will return to it's original\n     * position.\n     */\n\n  }, {\n    key: \"getProgress\",\n    value: function getProgress() {\n      return Promise.resolve(this.progress);\n    }\n  }, {\n    key: \"canStart\",\n    value: function canStart() {\n      if (!this.scrollEl) {\n        return false;\n      }\n\n      if (this.state !== 1\n      /* Inactive */\n      ) {\n        return false;\n      } // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n\n\n      if (this.scrollEl.scrollTop > 0) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart() {\n      this.progress = 0;\n      this.state = 1\n      /* Inactive */\n      ;\n    }\n  }, {\n    key: \"onMove\",\n    value: function onMove(detail) {\n      if (!this.scrollEl) {\n        return;\n      } // this method can get called like a bazillion times per second,\n      // so it's built to be as efficient as possible, and does its\n      // best to do any DOM read/writes only when absolutely necessary\n      // if multi-touch then get out immediately\n\n\n      var ev = detail.event;\n\n      if (ev.touches && ev.touches.length > 1) {\n        return;\n      } // do nothing if it's actively refreshing\n      // or it's in the way of closing\n      // or this was never a startY\n\n\n      if ((this.state & 56\n      /* _BUSY_ */\n      ) !== 0) {\n        return;\n      }\n\n      var pullFactor = Number.isNaN(this.pullFactor) || this.pullFactor < 0 ? 1 : this.pullFactor;\n      var deltaY = detail.deltaY * pullFactor; // don't bother if they're scrolling up\n      // and have not already started dragging\n\n      if (deltaY <= 0) {\n        // the current Y is higher than the starting Y\n        // so they scrolled up enough to be ignored\n        this.progress = 0;\n        this.state = 1\n        /* Inactive */\n        ;\n\n        if (this.appliedStyles) {\n          // reset the styles only if they were applied\n          this.setCss(0, '', false, '');\n          return;\n        }\n\n        return;\n      }\n\n      if (this.state === 1\n      /* Inactive */\n      ) {\n        // this refresh is not already actively pulling down\n        // get the content's scrollTop\n        var scrollHostScrollTop = this.scrollEl.scrollTop; // if the scrollTop is greater than zero then it's\n        // not possible to pull the content down yet\n\n        if (scrollHostScrollTop > 0) {\n          this.progress = 0;\n          return;\n        } // content scrolled all the way to the top, and dragging down\n\n\n        this.state = 2\n        /* Pulling */\n        ;\n      } // prevent native scroll events\n\n\n      if (ev.cancelable) {\n        ev.preventDefault();\n      } // the refresher is actively pulling at this point\n      // move the scroll element within the content element\n\n\n      this.setCss(deltaY, '0ms', true, '');\n\n      if (deltaY === 0) {\n        // don't continue if there's no delta yet\n        this.progress = 0;\n        return;\n      }\n\n      var pullMin = this.pullMin; // set pull progress\n\n      this.progress = deltaY / pullMin; // emit \"start\" if it hasn't started yet\n\n      if (!this.didStart) {\n        this.didStart = true;\n        this.ionStart.emit();\n      } // emit \"pulling\" on every move\n\n\n      this.ionPull.emit(); // do nothing if the delta is less than the pull threshold\n\n      if (deltaY < pullMin) {\n        // ensure it stays in the pulling state, cuz its not ready yet\n        this.state = 2\n        /* Pulling */\n        ;\n        return;\n      }\n\n      if (deltaY > this.pullMax) {\n        // they pulled farther than the max, so kick off the refresh\n        this.beginRefresh();\n        return;\n      } // pulled farther than the pull min!!\n      // it is now in the `ready` state!!\n      // if they let go then it'll refresh, kerpow!!\n\n\n      this.state = 4\n      /* Ready */\n      ;\n      return;\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd() {\n      // only run in a zone when absolutely necessary\n      if (this.state === 4\n      /* Ready */\n      ) {\n        // they pulled down far enough, so it's ready to refresh\n        this.beginRefresh();\n      } else if (this.state === 2\n      /* Pulling */\n      ) {\n        // they were pulling down, but didn't pull down far enough\n        // set the content back to it's original location\n        // and close the refresher\n        // set that the refresh is actively cancelling\n        this.cancel();\n      }\n    }\n  }, {\n    key: \"beginRefresh\",\n    value: function beginRefresh() {\n      // assumes we're already back in a zone\n      // they pulled down far enough, so it's ready to refresh\n      this.state = 8\n      /* Refreshing */\n      ; // place the content in a hangout position while it thinks\n\n      this.setCss(this.pullMin, this.snapbackDuration, true, ''); // emit \"refresh\" because it was pulled down far enough\n      // and they let go to begin refreshing\n\n      this.ionRefresh.emit({\n        complete: this.complete.bind(this)\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close(state, delay) {\n      var _this7 = this;\n\n      // create fallback timer incase something goes wrong with transitionEnd event\n      setTimeout(function () {\n        _this7.state = 1\n        /* Inactive */\n        ;\n        _this7.progress = 0;\n        _this7.didStart = false;\n\n        _this7.setCss(0, '0ms', false, '');\n      }, 600); // reset set the styles on the scroll element\n      // set that the refresh is actively cancelling/completing\n\n      this.state = state;\n      this.setCss(0, this.closeDuration, true, delay); // TODO: stop gesture\n    }\n  }, {\n    key: \"setCss\",\n    value: function setCss(y, duration, overflowVisible, delay) {\n      var _this8 = this;\n\n      if (this.nativeRefresher) {\n        return;\n      }\n\n      this.appliedStyles = y > 0;\n      writeTask(function () {\n        if (_this8.scrollEl && _this8.backgroundContentEl) {\n          var scrollStyle = _this8.scrollEl.style;\n          var backgroundStyle = _this8.backgroundContentEl.style;\n          scrollStyle.transform = backgroundStyle.transform = y > 0 ? \"translateY(\".concat(y, \"px) translateZ(0px)\") : '';\n          scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n          scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n          scrollStyle.overflow = overflowVisible ? 'hidden' : '';\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _class;\n\n      var mode = getIonMode(this);\n      return h(Host, {\n        slot: \"fixed\",\n        class: (_class = {}, _defineProperty(_class, mode, true), _defineProperty(_class, \"refresher-\".concat(mode), true), _defineProperty(_class, 'refresher-native', this.nativeRefresher), _defineProperty(_class, 'refresher-active', this.state !== 1), _defineProperty(_class, 'refresher-pulling', this.state === 2), _defineProperty(_class, 'refresher-ready', this.state === 4), _defineProperty(_class, 'refresher-refreshing', this.state === 8), _defineProperty(_class, 'refresher-cancelling', this.state === 16), _defineProperty(_class, 'refresher-completing', this.state === 32), _class)\n      });\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"disabled\": [\"disabledChanged\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return {\n        ios: refresherIosCss,\n        md: refresherMdCss\n      };\n    }\n  }]);\n\n  return Refresher;\n}(HTMLElement);\n\nRefresher = /*@__PURE__*/proxyCustomElement(Refresher, [32, \"ion-refresher\", {\n  \"pullMin\": [2, \"pull-min\"],\n  \"pullMax\": [2, \"pull-max\"],\n  \"closeDuration\": [1, \"close-duration\"],\n  \"snapbackDuration\": [1, \"snapback-duration\"],\n  \"pullFactor\": [2, \"pull-factor\"],\n  \"disabled\": [4],\n  \"nativeRefresher\": [32],\n  \"state\": [32],\n  \"complete\": [64],\n  \"cancel\": [64],\n  \"getProgress\": [64]\n}]);\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  var components = [\"ion-refresher\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-refresher\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Refresher);\n        }\n\n        break;\n    }\n  });\n}\n\nvar IonRefresher = Refresher;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonRefresher, defineCustomElement };","map":{"version":3,"sources":["/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@ionic/core/components/ion-refresher.js"],"names":["writeTask","HTMLElement","createEvent","readTask","h","Host","proxyCustomElement","a","isPlatform","b","getIonMode","g","getTimeGivenProgression","t","transitionEndAsync","c","componentOnReady","d","clamp","getElementRoot","r","raf","hapticImpact","createAnimation","getRefresherAnimationType","contentEl","previousSibling","previousElementSibling","hasHeader","tagName","createPullingAnimation","type","pullingSpinner","refresherEl","createScaleAnimation","createTranslateAnimation","createBaseAnimation","pullingRefresherIcon","spinner","querySelector","circle","shadowRoot","spinnerArrowContainer","arrowContainer","arrow","baseAnimation","duration","easing","spinnerArrowContainerAnimation","addElement","keyframes","offset","opacity","circleInnerAnimation","strokeDasharray","circleOuterAnimation","transform","arrowContainerAnimation","arrowAnimation","addAnimation","height","clientHeight","spinnerAnimation","createSnapBackAnimation","fromTo","setSpinnerOpacity","style","setProperty","toString","handleScrollWhilePulling","ticks","numTicks","pullAmount","max","forEach","el","i","min","range","start","progression","handleScrollWhileRefreshing","lastVelocityY","translateElement","value","Promise","resolve","trans","undefined","removeProperty","shouldUseNativeRefresher","referenceEl","mode","refresherContent","refreshingSpinner","webkitOverflowScrolling","refresherIosCss","refresherMdCss","Refresher","__registerHost","ionRefresh","ionPull","ionStart","appliedStyles","didStart","progress","pointerDown","needsCompletion","didRefresh","animations","nativeRefresher","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","gesture","enable","useNativeRefresher","closest","setupNativeRefresher","destroyNativeRefresher","scrollEl","scrollListenerCallback","removeEventListener","ani","destroy","elementToTransform","querySelectorAll","MAX_PULL","NUM_TICKS","length","scrollTop","refresherHeight","ratio","emit","Math","abs","shouldShowRefreshingSpinner","beginRefresh","addEventListener","createGesture","gestureName","gesturePriority","direction","threshold","onStart","onMove","ev","velocityY","onEnd","resetNativeRefresher","disabledChanged","refreshingCircle","canStart","data","animation","cancelled","animationType","progressStart","push","deltaY","progressStep","progressEnd","onFinish","snapBackAnimation","play","setCss","setupiOSNativeRefresher","setupMDNativeRefresher","checkNativeRefresher","getAttribute","console","error","getScrollElement","backgroundContentEl","passive","close","detail","event","touches","Number","isNaN","scrollHostScrollTop","cancelable","preventDefault","cancel","complete","bind","delay","setTimeout","y","overflowVisible","scrollStyle","backgroundStyle","transitionDuration","transitionDelay","overflow","slot","class","ios","md","defineCustomElement$1","customElements","components","get","define","IonRefresher","defineCustomElement"],"mappings":"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","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { writeTask, HTMLElement, createEvent, readTask, h, Host, proxyCustomElement } from '@stencil/core/internal/client';\nimport { a as isPlatform, b as getIonMode } from './ionic-global.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier.js';\nimport { t as transitionEndAsync, c as componentOnReady, d as clamp, g as getElementRoot, r as raf } from './helpers.js';\nimport { c as hapticImpact } from './haptic.js';\nimport { c as createAnimation } from './animation.js';\n\nconst getRefresherAnimationType = (contentEl) => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner, refresherEl) => {\n  return type === 'scale' ? createScaleAnimation(pullingSpinner, refresherEl) : createTranslateAnimation(pullingSpinner, refresherEl);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = (arrowContainer) ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation()\n    .duration(1000)\n    .easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation()\n    .addElement(spinnerArrowContainer)\n    .keyframes([\n    { offset: 0, opacity: '0.3' },\n    { offset: 0.45, opacity: '0.3' },\n    { offset: 0.55, opacity: '1' },\n    { offset: 1, opacity: '1' }\n  ]);\n  const circleInnerAnimation = createAnimation()\n    .addElement(circle)\n    .keyframes([\n    { offset: 0, strokeDasharray: '1px, 200px' },\n    { offset: 0.20, strokeDasharray: '1px, 200px' },\n    { offset: 0.55, strokeDasharray: '100px, 200px' },\n    { offset: 1, strokeDasharray: '100px, 200px' }\n  ]);\n  const circleOuterAnimation = createAnimation()\n    .addElement(spinner)\n    .keyframes([\n    { offset: 0, transform: 'rotate(-90deg)' },\n    { offset: 1, transform: 'rotate(210deg)' }\n  ]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation()\n      .addElement(arrowContainer)\n      .keyframes([\n      { offset: 0, transform: 'rotate(0deg)' },\n      { offset: 0.30, transform: 'rotate(0deg)' },\n      { offset: 0.55, transform: 'rotate(280deg)' },\n      { offset: 1, transform: 'rotate(400deg)' }\n    ]);\n    const arrowAnimation = createAnimation()\n      .addElement(arrow)\n      .keyframes([\n      { offset: 0, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.30, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n      { offset: 1, transform: 'translateX(-1.5px) scale(1)' }\n    ]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `scale(0) translateY(-${height}px)` },\n    { offset: 1, transform: 'scale(1) translateY(100px)' }\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `translateY(-${height}px)` },\n    { offset: 1, transform: 'translateY(100px)' }\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n  return createAnimation()\n    .duration(125)\n    .addElement(pullingRefresherIcon)\n    .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (ticks, numTicks, pullAmount) => {\n  const max = 1;\n  writeTask(() => {\n    ticks.forEach((el, i) => {\n      /**\n       * Compute the opacity of each tick\n       * mark as a percentage of the pullAmount\n       * offset by max / numTicks so\n       * the tick marks are shown staggered.\n       */\n      const min = i * (max / numTicks);\n      const range = max - min;\n      const start = pullAmount - min;\n      const progression = clamp(0, start / range, 1);\n      el.style.setProperty('opacity', progression.toString());\n    });\n  });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', (lastVelocityY >= 1.0) ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\nconst translateElement = (el, value, duration = 200) => {\n  if (!el) {\n    return Promise.resolve();\n  }\n  const trans = transitionEndAsync(el, duration);\n  writeTask(() => {\n    el.style.setProperty('transition', `${duration}ms all ease-out`);\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    }\n    else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = async (referenceEl, mode) => {\n  const refresherContent = referenceEl.querySelector('ion-refresher-content');\n  if (!refresherContent) {\n    return Promise.resolve(false);\n  }\n  await new Promise(resolve => componentOnReady(refresherContent, resolve));\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return (pullingSpinner !== null &&\n    refreshingSpinner !== null &&\n    ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n      mode === 'md'));\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native ion-spinner{width:32px;height:32px;color:var(--ion-color-step-450, #747577)}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0) rotate(180deg);transform:scale(0) rotate(180deg);-webkit-transition:300ms;transition:300ms}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid var(--ion-color-step-200, #ececec);background:var(--ion-color-step-250, #ffffff);-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nlet Refresher = class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n    this.state = 1 /* Inactive */;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n    this.disabled = false;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async checkNativeRefresher() {\n    const useNativeRefresher = await shouldUseNativeRefresher(this.el, getIonMode(this));\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    }\n    else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n    this.nativeRefresher = false;\n  }\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined, 300);\n    }\n    else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n    }\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach(ani => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    let MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach(el => el.style.setProperty('animation', 'none')));\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1 /* Inactive */) {\n        return;\n      }\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8 /* Refreshing */) {\n            const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n            writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n            return;\n          }\n          return;\n        }\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          }\n          // emit \"pulling\" on every move\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        }\n        /**\n         * We want to delay the start of this gesture by ~30px\n         * when initially pulling down so the refresher does not\n         * overlap with the content. But when letting go of the\n         * gesture before the refresher completes, we want the\n         * refresher tick marks to quickly fade out.\n         */\n        const offset = (this.didStart) ? 30 : 0;\n        const pullAmount = this.progress = clamp(0, (Math.abs(scrollTop) - offset) / MAX_PULL, 1);\n        const shouldShowRefreshingSpinner = this.state === 8 /* Refreshing */ || pullAmount === 1;\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({ style: 'light' });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        }\n        else {\n          this.state = 2 /* Pulling */;\n          handleScrollWhilePulling(ticks, NUM_TICKS, pullAmount);\n        }\n      });\n    };\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n        /**\n         * If the content had `display: none` when\n         * the refresher was initialized, its clientHeight\n         * will be 0. When the gesture starts, the content\n         * will be visible, so try to get the correct\n         * client height again. This is most common when\n         * using the refresher in an ion-menu.\n         */\n        if (MAX_PULL === 0) {\n          MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        }\n      },\n      onMove: ev => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */);\n          this.needsCompletion = false;\n        }\n        else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = getElementRoot(pullingSpinner).querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none');\n        // This lines up the animation on the refreshing spinner with the pulling spinner\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8 /* Refreshing */ && this.state !== 32 /* Completing */ && this.scrollEl.scrollTop === 0,\n      onStart: (ev) => {\n        ev.data = { animation: undefined, didStart: false, cancelled: false };\n      },\n      onMove: (ev) => {\n        if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2 /* Pulling */;\n          writeTask(() => this.scrollEl.style.setProperty('--overflow', 'hidden'));\n          const animationType = getRefresherAnimationType(contentEl);\n          const animation = createPullingAnimation(animationType, pullingRefresherIcon, this.el);\n          ev.data.animation = animation;\n          animation.progressStart(false, 0);\n          this.ionStart.emit();\n          this.animations.push(animation);\n          return;\n        }\n        // Since we are using an easing curve, slow the gesture tracking down a bit\n        this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: (ev) => {\n        if (!ev.data.didStart) {\n          return;\n        }\n        writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n        if (this.progress <= 0.4) {\n          this.gesture.enable(false);\n          ev.data.animation\n            .progressEnd(0, this.progress, 500)\n            .onFinish(() => {\n            this.animations.forEach(ani => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1 /* Inactive */;\n          });\n          return;\n        }\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${(progress * 100)}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n        });\n      }\n    });\n    this.disabledChanged();\n  }\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n    /**\n     * If using non-native refresher before make sure\n     * we clean up any old CSS. This can happen when\n     * a user manually calls the refresh method in a\n     * component create callback before the native\n     * refresher is setup.\n     */\n    this.setCss(0, '', false, '');\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    }\n    else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n  async connectedCallback() {\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n    const contentEl = this.el.closest('ion-content');\n    if (!contentEl) {\n      console.error('<ion-refresher> must be used inside an <ion-content>');\n      return;\n    }\n    await new Promise(resolve => componentOnReady(contentEl, resolve));\n    this.scrollEl = await contentEl.getScrollElement();\n    this.backgroundContentEl = getElementRoot(contentEl).querySelector('#background-content');\n    if (await shouldUseNativeRefresher(this.el, getIonMode(this))) {\n      this.setupNativeRefresher(contentEl);\n    }\n    else {\n      this.gesture = (await import('./index2.js')).createGesture({\n        el: contentEl,\n        gestureName: 'refresher',\n        gesturePriority: 31,\n        direction: 'y',\n        threshold: 20,\n        passive: false,\n        canStart: () => this.canStart(),\n        onStart: () => this.onStart(),\n        onMove: ev => this.onMove(ev),\n        onEnd: () => this.onEnd(),\n      });\n      this.disabledChanged();\n    }\n  }\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true;\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */)));\n      }\n    }\n    else {\n      this.close(32 /* Completing */, '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* Cancelling */)));\n      }\n    }\n    else {\n      this.close(16 /* Cancelling */, '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n    if (this.state !== 1 /* Inactive */) {\n      return false;\n    }\n    // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n    return true;\n  }\n  onStart() {\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    }\n    // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n    const ev = detail.event;\n    if (ev.touches && ev.touches.length > 1) {\n      return;\n    }\n    // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n    if ((this.state & 56 /* _BUSY_ */) !== 0) {\n      return;\n    }\n    const pullFactor = (Number.isNaN(this.pullFactor) || this.pullFactor < 0) ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor;\n    // don't bother if they're scrolling up\n    // and have not already started dragging\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1 /* Inactive */;\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n      return;\n    }\n    if (this.state === 1 /* Inactive */) {\n      // this refresh is not already actively pulling down\n      // get the content's scrollTop\n      const scrollHostScrollTop = this.scrollEl.scrollTop;\n      // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n      if (scrollHostScrollTop > 0) {\n        this.progress = 0;\n        return;\n      }\n      // content scrolled all the way to the top, and dragging down\n      this.state = 2 /* Pulling */;\n    }\n    // prevent native scroll events\n    if (ev.cancelable) {\n      ev.preventDefault();\n    }\n    // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n    this.setCss(deltaY, '0ms', true, '');\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n    const pullMin = this.pullMin;\n    // set pull progress\n    this.progress = deltaY / pullMin;\n    // emit \"start\" if it hasn't started yet\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    }\n    // emit \"pulling\" on every move\n    this.ionPull.emit();\n    // do nothing if the delta is less than the pull threshold\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2 /* Pulling */;\n      return;\n    }\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    }\n    // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n    this.state = 4 /* Ready */;\n    return;\n  }\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4 /* Ready */) {\n      // they pulled down far enough, so it's ready to refresh\n      this.beginRefresh();\n    }\n    else if (this.state === 2 /* Pulling */) {\n      // they were pulling down, but didn't pull down far enough\n      // set the content back to it's original location\n      // and close the refresher\n      // set that the refresh is actively cancelling\n      this.cancel();\n    }\n  }\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8 /* Refreshing */;\n    // place the content in a hangout position while it thinks\n    this.setCss(this.pullMin, this.snapbackDuration, true, '');\n    // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this)\n    });\n  }\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1 /* Inactive */;\n      this.progress = 0;\n      this.didStart = false;\n      this.setCss(0, '0ms', false, '');\n    }, 600);\n    // reset set the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay);\n    // TODO: stop gesture\n  }\n  setCss(y, duration, overflowVisible, delay) {\n    if (this.nativeRefresher) {\n      return;\n    }\n    this.appliedStyles = (y > 0);\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = ((y > 0) ? `translateY(${y}px) translateZ(0px)` : '');\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = (overflowVisible ? 'hidden' : '');\n      }\n    });\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { slot: \"fixed\", class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1 /* Inactive */,\n        'refresher-pulling': this.state === 2 /* Pulling */,\n        'refresher-ready': this.state === 4 /* Ready */,\n        'refresher-refreshing': this.state === 8 /* Refreshing */,\n        'refresher-cancelling': this.state === 16 /* Cancelling */,\n        'refresher-completing': this.state === 32 /* Completing */,\n      } }));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n  static get style() { return {\n    ios: refresherIosCss,\n    md: refresherMdCss\n  }; }\n};\nRefresher = /*@__PURE__*/ proxyCustomElement(Refresher, [32, \"ion-refresher\", {\n    \"pullMin\": [2, \"pull-min\"],\n    \"pullMax\": [2, \"pull-max\"],\n    \"closeDuration\": [1, \"close-duration\"],\n    \"snapbackDuration\": [1, \"snapback-duration\"],\n    \"pullFactor\": [2, \"pull-factor\"],\n    \"disabled\": [4],\n    \"nativeRefresher\": [32],\n    \"state\": [32],\n    \"complete\": [64],\n    \"cancel\": [64],\n    \"getProgress\": [64]\n  }]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-refresher\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-refresher\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Refresher);\n      }\n      break;\n  } });\n}\n\nconst IonRefresher = Refresher;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonRefresher, defineCustomElement };\n"]},"metadata":{},"sourceType":"module"}