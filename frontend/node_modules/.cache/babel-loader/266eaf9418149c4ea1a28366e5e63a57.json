{"ast":null,"code":"export const searchCostumers = () => {\n  if (!localStorage['customers']) {\n    localStorage['customers'] = '[]';\n  }\n\n  let customers = localStorage['customers'];\n  customers = JSON.parse(customers);\n  return customers;\n  const datosEjemplo = [{\n    id: 1,\n    firstname: 'Jero',\n    lastname: 'Jimenez',\n    phone: '22311451',\n    email: 'jerodepiran@gmail.com',\n    address: 'San Martin 190'\n  }, {\n    id: 2,\n    firstname: 'Oscar',\n    lastname: 'Perez',\n    phone: '22311451',\n    email: 'jerojimenez17@gmail.com',\n    address: 'Belgrano 123'\n  }, {\n    id: 3,\n    firstname: 'Pedro',\n    lastname: 'Lopez',\n    phone: '2266525',\n    email: 'pedrolopez@gmail.com',\n    address: '12 de octubre 123'\n  }];\n};\nexport const removeCostumer = id => {\n  let customers = searchCostumers();\n  let indice = customers.findIndex(customer => customer.id == id);\n  customers.splice(indice, 1);\n  localStorage['customers'] = JSON.stringify(customers);\n};\nexport const saveCostumer = customer => {\n  let customers = searchCostumers();\n\n  if (customer.id) {\n    let indice = customers.findIndex(c => c.id == customer.id);\n    customers[indice] = customer;\n  } else {\n    customer.id = String(Math.round(Math.random() * 1000));\n    customers.push(customer);\n  }\n\n  localStorage['customers'] = JSON.stringify(customers);\n};\nexport const searchCustomerById = id => {\n  let customers = searchCostumers();\n  return customers.find(customer => customer.id == id);\n};","map":{"version":3,"sources":["/home/jero/Documentos/IonicReactApp/cursoreact/src/pages/customer/CustomerApi.ts"],"names":["searchCostumers","localStorage","customers","JSON","parse","datosEjemplo","id","firstname","lastname","phone","email","address","removeCostumer","indice","findIndex","customer","splice","stringify","saveCostumer","c","String","Math","round","random","push","searchCustomerById","find"],"mappings":"AAEA,OAAO,MAAMA,eAAe,GAAG,MAAI;AAC/B,MAAG,CAACC,YAAY,CAAC,WAAD,CAAhB,EAA8B;AAC1BA,IAAAA,YAAY,CAAC,WAAD,CAAZ,GAA2B,IAA3B;AACH;;AAED,MAAIC,SAAS,GAAGD,YAAY,CAAC,WAAD,CAA5B;AACAC,EAAAA,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWF,SAAX,CAAZ;AACA,SAAOA,SAAP;AAGA,QAAMG,YAAY,GAAG,CACjB;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,SAAS,EAAE,MAFf;AAGIC,IAAAA,QAAQ,EAAE,SAHd;AAIIC,IAAAA,KAAK,EAAE,UAJX;AAKIC,IAAAA,KAAK,EAAE,uBALX;AAMIC,IAAAA,OAAO,EAAE;AANb,GADiB,EASjB;AACIL,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,SAAS,EAAE,OAFf;AAGIC,IAAAA,QAAQ,EAAE,OAHd;AAIIC,IAAAA,KAAK,EAAE,UAJX;AAKIC,IAAAA,KAAK,EAAE,yBALX;AAMIC,IAAAA,OAAO,EAAE;AANb,GATiB,EAiBjB;AACIL,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,SAAS,EAAE,OAFf;AAGIC,IAAAA,QAAQ,EAAE,OAHd;AAIIC,IAAAA,KAAK,EAAE,SAJX;AAKIC,IAAAA,KAAK,EAAE,sBALX;AAMIC,IAAAA,OAAO,EAAE;AANb,GAjBiB,CAArB;AA0BH,CApCM;AAqCP,OAAO,MAAMC,cAAc,GAAIN,EAAD,IAAa;AACvC,MAAIJ,SAAS,GAAGF,eAAe,EAA/B;AACA,MAAIa,MAAM,GAAGX,SAAS,CAACY,SAAV,CAAqBC,QAAD,IAAkBA,QAAQ,CAACT,EAAT,IAAeA,EAArD,CAAb;AACAJ,EAAAA,SAAS,CAACc,MAAV,CAAiBH,MAAjB,EAAwB,CAAxB;AACAZ,EAAAA,YAAY,CAAC,WAAD,CAAZ,GAA4BE,IAAI,CAACc,SAAL,CAAef,SAAf,CAA5B;AACH,CALM;AAOP,OAAO,MAAMgB,YAAY,GAAIH,QAAD,IAAqB;AAC7C,MAAIb,SAAS,GAAGF,eAAe,EAA/B;;AACA,MAAGe,QAAQ,CAACT,EAAZ,EAAe;AACX,QAAIO,MAAM,GAAGX,SAAS,CAACY,SAAV,CAAqBK,CAAD,IAAgBA,CAAC,CAACb,EAAF,IAAQS,QAAQ,CAACT,EAArD,CAAb;AACAJ,IAAAA,SAAS,CAACW,MAAD,CAAT,GAAkBE,QAAlB;AAEH,GAJD,MAKI;AACAA,IAAAA,QAAQ,CAACT,EAAT,GAAac,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,IAAzB,CAAD,CAAnB;AACArB,IAAAA,SAAS,CAACsB,IAAV,CAAeT,QAAf;AACH;;AACDd,EAAAA,YAAY,CAAC,WAAD,CAAZ,GAA4BE,IAAI,CAACc,SAAL,CAAef,SAAf,CAA5B;AACH,CAZM;AAcP,OAAO,MAAMuB,kBAAkB,GAAInB,EAAD,IAAa;AAC3C,MAAIJ,SAAS,GAAGF,eAAe,EAA/B;AACA,SAAOE,SAAS,CAACwB,IAAV,CAAgBX,QAAD,IAAmBA,QAAQ,CAACT,EAAT,IAAcA,EAAhD,CAAP;AACH,CAHM","sourcesContent":["import Customer from \"./Customer\";\n\nexport const searchCostumers = ()=>{\n    if(!localStorage['customers']){\n        localStorage['customers']= '[]';\n    }\n    \n    let customers = localStorage['customers'];\n    customers = JSON.parse(customers);\n    return customers;\n\n    \n    const datosEjemplo = [\n        {\n            id: 1,\n            firstname: 'Jero',\n            lastname: 'Jimenez',\n            phone: '22311451',\n            email: 'jerodepiran@gmail.com',\n            address: 'San Martin 190',\n        },\n        {\n            id: 2,\n            firstname: 'Oscar',\n            lastname: 'Perez',\n            phone: '22311451',\n            email: 'jerojimenez17@gmail.com',\n            address: 'Belgrano 123',\n        },\n        {\n            id: 3,\n            firstname: 'Pedro',\n            lastname: 'Lopez',\n            phone: '2266525',\n            email: 'pedrolopez@gmail.com',\n            address: '12 de octubre 123',\n        }\n    ];\n}\nexport const removeCostumer = (id:string)=>{\n    let customers = searchCostumers();\n    let indice = customers.findIndex((customer:any) => customer.id == id);\n    customers.splice(indice,1);\n    localStorage['customers'] = JSON.stringify(customers);\n}\n\nexport const saveCostumer = (customer:Customer)=>{\n    let customers = searchCostumers();\n    if(customer.id){\n        let indice = customers.findIndex((c:Customer) => c.id == customer.id);\n        customers[indice]=customer;\n\n    }\n    else{\n        customer.id= String(Math.round(Math.random()*1000));\n        customers.push(customer);\n    }\n    localStorage['customers'] = JSON.stringify(customers);\n}\n\nexport const searchCustomerById = (id:string)=>{\n    let customers = searchCostumers();\n    return customers.find((customer :any) => customer.id ==id);\n}"]},"metadata":{},"sourceType":"module"}