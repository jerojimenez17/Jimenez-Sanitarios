{"ast":null,"code":"import _defineProperty from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { HTMLElement, createEvent, h, Host, proxyCustomElement } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { r as raf, g as getElementRoot } from './helpers.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic.js';\nimport { c as createColorClasses } from './theme.js';\nvar pickerColumnInternalIosCss = \":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}\";\nvar pickerColumnInternalMdCss = \":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}:host .picker-item-active{color:var(--ion-color-base)}\";\n\nvar PickerColumnInternal = /*#__PURE__*/function (_HTMLElement) {\n  _inherits(PickerColumnInternal, _HTMLElement);\n\n  var _super = _createSuper(PickerColumnInternal);\n\n  function PickerColumnInternal() {\n    var _this;\n\n    _classCallCheck(this, PickerColumnInternal);\n\n    _this = _super.call(this);\n\n    _this.__registerHost();\n\n    _this.__attachShadow();\n\n    _this.ionChange = createEvent(_assertThisInitialized(_this), \"ionChange\", 7);\n    _this.hapticsStarted = false;\n    _this.isColumnVisible = false;\n    _this.isActive = false;\n    /**\n     * A list of options to be displayed in the picker\n     */\n\n    _this.items = [];\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n\n    _this.color = 'primary';\n    /**\n     * If `true`, tapping the picker will\n     * reveal a number input keyboard that lets\n     * the user type in values for each picker\n     * column. This is useful when working\n     * with time pickers.\n     *\n     * @internal\n     */\n\n    _this.numericInput = false;\n\n    _this.centerPickerItemInView = function (target) {\n      var smooth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      _this.el.scroll({\n        // (Vertical offset from parent) - (three empty picker rows) + (half the height of the target to ensure the scroll triggers)\n        top: target.offsetTop - 3 * target.clientHeight + target.clientHeight / 2,\n        left: 0,\n        behavior: smooth ? 'smooth' : undefined\n      });\n    };\n    /**\n     * When ionInputModeChange is emitted, each column\n     * needs to check if it is the one being made available\n     * for text entry.\n     */\n\n\n    _this.inputModeChange = function (ev) {\n      if (!_this.numericInput) {\n        return;\n      }\n\n      var _ev$detail = ev.detail,\n          useInputMode = _ev$detail.useInputMode,\n          inputModeColumn = _ev$detail.inputModeColumn;\n      /**\n       * If inputModeColumn is undefined then this means\n       * all numericInput columns are being selected.\n       */\n\n      var isColumnActive = inputModeColumn === undefined || inputModeColumn === _this.el;\n\n      if (!useInputMode || !isColumnActive) {\n        _this.isActive = false;\n        return;\n      }\n\n      _this.isActive = true;\n    };\n    /**\n     * When the column scrolls, the component\n     * needs to determine which item is centered\n     * in the view and will emit an ionChange with\n     * the item object.\n     */\n\n\n    _this.initializeScrollListener = function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          el = _assertThisInitialize.el;\n\n      var timeout;\n      var activeEl = _this.activeItem;\n\n      var scrollCallback = function scrollCallback() {\n        raf(function () {\n          if (timeout) {\n            clearTimeout(timeout);\n            timeout = undefined;\n          }\n\n          if (!_this.hapticsStarted) {\n            hapticSelectionStart();\n            _this.hapticsStarted = true;\n          }\n          /**\n           * Select item in the center of the column\n           * which is the month/year that we want to select\n           */\n\n\n          var bbox = el.getBoundingClientRect();\n          var centerX = bbox.x + bbox.width / 2;\n          var centerY = bbox.y + bbox.height / 2;\n          var activeElement = el.shadowRoot.elementFromPoint(centerX, centerY);\n\n          if (activeEl !== null) {\n            activeEl.classList.remove(PICKER_COL_ACTIVE);\n          }\n          /**\n           * If we are selecting a new value,\n           * we need to run haptics again.\n           */\n\n\n          if (activeElement !== activeEl) {\n            hapticSelectionChanged();\n          }\n\n          activeEl = activeElement;\n          activeElement.classList.add(PICKER_COL_ACTIVE);\n          timeout = setTimeout(function () {\n            var dataIndex = activeElement.getAttribute('data-index');\n            /**\n             * If no value it is\n             * possible we hit one of the\n             * empty padding columns.\n             */\n\n            if (dataIndex === null) {\n              return;\n            }\n\n            var index = parseInt(dataIndex, 10);\n            var selectedItem = _this.items[index];\n\n            if (selectedItem.value !== _this.value) {\n              _this.value = selectedItem.value;\n              hapticSelectionEnd();\n              _this.hapticsStarted = false;\n            }\n          }, 250);\n        });\n      };\n      /**\n       * Wrap this in an raf so that the scroll callback\n       * does not fire when component is initially shown.\n       */\n\n\n      raf(function () {\n        el.addEventListener('scroll', scrollCallback);\n\n        _this.destroyScrollListener = function () {\n          el.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PickerColumnInternal, [{\n    key: \"valueChange\",\n    value: function valueChange() {\n      if (this.isColumnVisible) {\n        /**\n         * Only scroll the active item into view and emit the value\n         * change, when the picker column is actively visible to the user.\n         */\n        var items = this.items,\n            value = this.value;\n        this.scrollActiveItemIntoView();\n        var findItem = items.find(function (item) {\n          return item.value === value;\n        });\n\n        if (findItem) {\n          this.ionChange.emit(findItem);\n        }\n      }\n    }\n    /**\n     * Only setup scroll listeners\n     * when the picker is visible, otherwise\n     * the container will have a scroll\n     * height of 0px.\n     */\n\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      var _this2 = this;\n\n      var visibleCallback = function visibleCallback(entries) {\n        var _a;\n\n        var ev = entries[0];\n\n        if (ev.isIntersecting) {\n          /**\n           * Because this initial call to scrollActiveItemIntoView has to fire before\n           * the scroll listener is set up, we need to manage the active class manually.\n           */\n          var oldActive = getElementRoot(_this2.el).querySelector(\".\".concat(PICKER_COL_ACTIVE));\n          oldActive === null || oldActive === void 0 ? void 0 : oldActive.classList.remove(PICKER_COL_ACTIVE);\n\n          _this2.scrollActiveItemIntoView();\n\n          (_a = _this2.activeItem) === null || _a === void 0 ? void 0 : _a.classList.add(PICKER_COL_ACTIVE);\n\n          _this2.initializeScrollListener();\n\n          _this2.isColumnVisible = true;\n        } else {\n          if (_this2.destroyScrollListener) {\n            _this2.destroyScrollListener();\n\n            _this2.destroyScrollListener = undefined;\n          }\n\n          _this2.isColumnVisible = false;\n        }\n      };\n\n      new IntersectionObserver(visibleCallback, {\n        threshold: 0.01\n      }).observe(this.el);\n      var parentEl = this.el.closest('ion-picker-internal');\n\n      if (parentEl !== null) {\n        parentEl.addEventListener('ionInputModeChange', function (ev) {\n          return _this2.inputModeChange(ev);\n        });\n      }\n    }\n  }, {\n    key: \"scrollActiveItemIntoView\",\n    value: function scrollActiveItemIntoView() {\n      var activeEl = this.activeItem;\n\n      if (activeEl) {\n        this.centerPickerItemInView(activeEl, false);\n      }\n    }\n  }, {\n    key: \"activeItem\",\n    get: function get() {\n      return getElementRoot(this.el).querySelector(\".picker-item[data-value=\\\"\".concat(this.value, \"\\\"]\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _createColorClasses,\n          _this3 = this;\n\n      var items = this.items,\n          color = this.color,\n          isActive = this.isActive,\n          numericInput = this.numericInput;\n      var mode = getIonMode(this);\n      return h(Host, {\n        tabindex: 0,\n        class: createColorClasses(color, (_createColorClasses = {}, _defineProperty(_createColorClasses, mode, true), _defineProperty(_createColorClasses, 'picker-column-active', isActive), _defineProperty(_createColorClasses, 'picker-column-numeric-input', numericInput), _createColorClasses))\n      }, h(\"div\", {\n        class: \"picker-item picker-item-empty\"\n      }, \"\\xA0\"), h(\"div\", {\n        class: \"picker-item picker-item-empty\"\n      }, \"\\xA0\"), h(\"div\", {\n        class: \"picker-item picker-item-empty\"\n      }, \"\\xA0\"), items.map(function (item, index) {\n        return h(\"div\", {\n          class: \"picker-item\",\n          \"data-value\": item.value,\n          \"data-index\": index,\n          onClick: function onClick(ev) {\n            _this3.centerPickerItemInView(ev.target);\n          }\n        }, item.text);\n      }), h(\"div\", {\n        class: \"picker-item picker-item-empty\"\n      }, \"\\xA0\"), h(\"div\", {\n        class: \"picker-item picker-item-empty\"\n      }, \"\\xA0\"), h(\"div\", {\n        class: \"picker-item picker-item-empty\"\n      }, \"\\xA0\"));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"value\": [\"valueChange\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return {\n        ios: pickerColumnInternalIosCss,\n        md: pickerColumnInternalMdCss\n      };\n    }\n  }]);\n\n  return PickerColumnInternal;\n}(HTMLElement);\n\nvar PICKER_COL_ACTIVE = 'picker-item-active';\nPickerColumnInternal = /*@__PURE__*/proxyCustomElement(PickerColumnInternal, [33, \"ion-picker-column-internal\", {\n  \"items\": [16],\n  \"value\": [1032],\n  \"color\": [513],\n  \"numericInput\": [4, \"numeric-input\"],\n  \"isActive\": [32]\n}]);\n\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  var components = [\"ion-picker-column-internal\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-picker-column-internal\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, PickerColumnInternal);\n        }\n\n        break;\n    }\n  });\n}\n\nexport { PickerColumnInternal as P, defineCustomElement as d };","map":{"version":3,"sources":["/home/jero/Documentos/IonicReactApp/cursoreact/node_modules/@ionic/core/components/picker-column-internal.js"],"names":["HTMLElement","createEvent","h","Host","proxyCustomElement","b","getIonMode","r","raf","g","getElementRoot","a","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","c","createColorClasses","pickerColumnInternalIosCss","pickerColumnInternalMdCss","PickerColumnInternal","__registerHost","__attachShadow","ionChange","hapticsStarted","isColumnVisible","isActive","items","color","numericInput","centerPickerItemInView","target","smooth","el","scroll","top","offsetTop","clientHeight","left","behavior","undefined","inputModeChange","ev","detail","useInputMode","inputModeColumn","isColumnActive","initializeScrollListener","timeout","activeEl","activeItem","scrollCallback","clearTimeout","bbox","getBoundingClientRect","centerX","x","width","centerY","y","height","activeElement","shadowRoot","elementFromPoint","classList","remove","PICKER_COL_ACTIVE","add","setTimeout","dataIndex","getAttribute","index","parseInt","selectedItem","value","addEventListener","destroyScrollListener","removeEventListener","scrollActiveItemIntoView","findItem","find","item","emit","visibleCallback","entries","_a","isIntersecting","oldActive","querySelector","IntersectionObserver","threshold","observe","parentEl","closest","mode","tabindex","class","map","onClick","text","ios","md","defineCustomElement","customElements","components","forEach","tagName","get","define","P","d"],"mappings":"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","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { HTMLElement, createEvent, h, Host, proxyCustomElement } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { r as raf, g as getElementRoot } from './helpers.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic.js';\nimport { c as createColorClasses } from './theme.js';\n\nconst pickerColumnInternalIosCss = \":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}\";\n\nconst pickerColumnInternalMdCss = \":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}:host .picker-item-active{color:var(--ion-color-base)}\";\n\nlet PickerColumnInternal = class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.hapticsStarted = false;\n    this.isColumnVisible = false;\n    this.isActive = false;\n    /**\n     * A list of options to be displayed in the picker\n     */\n    this.items = [];\n    /**\n     * The color to use from your application's color palette.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"tertiary\"`, `\"success\"`, `\"warning\"`, `\"danger\"`, `\"light\"`, `\"medium\"`, and `\"dark\"`.\n     * For more information on colors, see [theming](/docs/theming/basics).\n     */\n    this.color = 'primary';\n    /**\n     * If `true`, tapping the picker will\n     * reveal a number input keyboard that lets\n     * the user type in values for each picker\n     * column. This is useful when working\n     * with time pickers.\n     *\n     * @internal\n     */\n    this.numericInput = false;\n    this.centerPickerItemInView = (target, smooth = true) => {\n      this.el.scroll({\n        // (Vertical offset from parent) - (three empty picker rows) + (half the height of the target to ensure the scroll triggers)\n        top: target.offsetTop - (3 * target.clientHeight) + (target.clientHeight / 2),\n        left: 0,\n        behavior: smooth ? 'smooth' : undefined\n      });\n    };\n    /**\n     * When ionInputModeChange is emitted, each column\n     * needs to check if it is the one being made available\n     * for text entry.\n     */\n    this.inputModeChange = (ev) => {\n      if (!this.numericInput) {\n        return;\n      }\n      const { useInputMode, inputModeColumn } = ev.detail;\n      /**\n       * If inputModeColumn is undefined then this means\n       * all numericInput columns are being selected.\n       */\n      const isColumnActive = inputModeColumn === undefined || inputModeColumn === this.el;\n      if (!useInputMode || !isColumnActive) {\n        this.isActive = false;\n        return;\n      }\n      this.isActive = true;\n    };\n    /**\n     * When the column scrolls, the component\n     * needs to determine which item is centered\n     * in the view and will emit an ionChange with\n     * the item object.\n     */\n    this.initializeScrollListener = () => {\n      const { el } = this;\n      let timeout;\n      let activeEl = this.activeItem;\n      const scrollCallback = () => {\n        raf(() => {\n          if (timeout) {\n            clearTimeout(timeout);\n            timeout = undefined;\n          }\n          if (!this.hapticsStarted) {\n            hapticSelectionStart();\n            this.hapticsStarted = true;\n          }\n          /**\n           * Select item in the center of the column\n           * which is the month/year that we want to select\n           */\n          const bbox = el.getBoundingClientRect();\n          const centerX = bbox.x + (bbox.width / 2);\n          const centerY = bbox.y + (bbox.height / 2);\n          const activeElement = el.shadowRoot.elementFromPoint(centerX, centerY);\n          if (activeEl !== null) {\n            activeEl.classList.remove(PICKER_COL_ACTIVE);\n          }\n          /**\n           * If we are selecting a new value,\n           * we need to run haptics again.\n           */\n          if (activeElement !== activeEl) {\n            hapticSelectionChanged();\n          }\n          activeEl = activeElement;\n          activeElement.classList.add(PICKER_COL_ACTIVE);\n          timeout = setTimeout(() => {\n            const dataIndex = activeElement.getAttribute('data-index');\n            /**\n             * If no value it is\n             * possible we hit one of the\n             * empty padding columns.\n             */\n            if (dataIndex === null) {\n              return;\n            }\n            const index = parseInt(dataIndex, 10);\n            const selectedItem = this.items[index];\n            if (selectedItem.value !== this.value) {\n              this.value = selectedItem.value;\n              hapticSelectionEnd();\n              this.hapticsStarted = false;\n            }\n          }, 250);\n        });\n      };\n      /**\n       * Wrap this in an raf so that the scroll callback\n       * does not fire when component is initially shown.\n       */\n      raf(() => {\n        el.addEventListener('scroll', scrollCallback);\n        this.destroyScrollListener = () => {\n          el.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n  }\n  valueChange() {\n    if (this.isColumnVisible) {\n      /**\n       * Only scroll the active item into view and emit the value\n       * change, when the picker column is actively visible to the user.\n       */\n      const { items, value } = this;\n      this.scrollActiveItemIntoView();\n      const findItem = items.find(item => item.value === value);\n      if (findItem) {\n        this.ionChange.emit(findItem);\n      }\n    }\n  }\n  /**\n   * Only setup scroll listeners\n   * when the picker is visible, otherwise\n   * the container will have a scroll\n   * height of 0px.\n   */\n  componentWillLoad() {\n    const visibleCallback = (entries) => {\n      var _a;\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        /**\n         * Because this initial call to scrollActiveItemIntoView has to fire before\n         * the scroll listener is set up, we need to manage the active class manually.\n         */\n        const oldActive = getElementRoot(this.el).querySelector(`.${PICKER_COL_ACTIVE}`);\n        oldActive === null || oldActive === void 0 ? void 0 : oldActive.classList.remove(PICKER_COL_ACTIVE);\n        this.scrollActiveItemIntoView();\n        (_a = this.activeItem) === null || _a === void 0 ? void 0 : _a.classList.add(PICKER_COL_ACTIVE);\n        this.initializeScrollListener();\n        this.isColumnVisible = true;\n      }\n      else {\n        if (this.destroyScrollListener) {\n          this.destroyScrollListener();\n          this.destroyScrollListener = undefined;\n        }\n        this.isColumnVisible = false;\n      }\n    };\n    new IntersectionObserver(visibleCallback, { threshold: 0.01 }).observe(this.el);\n    const parentEl = this.el.closest('ion-picker-internal');\n    if (parentEl !== null) {\n      parentEl.addEventListener('ionInputModeChange', (ev) => this.inputModeChange(ev));\n    }\n  }\n  scrollActiveItemIntoView() {\n    const activeEl = this.activeItem;\n    if (activeEl) {\n      this.centerPickerItemInView(activeEl, false);\n    }\n  }\n  get activeItem() {\n    return getElementRoot(this.el).querySelector(`.picker-item[data-value=\"${this.value}\"]`);\n  }\n  render() {\n    const { items, color, isActive, numericInput } = this;\n    const mode = getIonMode(this);\n    return (h(Host, { tabindex: 0, class: createColorClasses(color, {\n        [mode]: true,\n        ['picker-column-active']: isActive,\n        ['picker-column-numeric-input']: numericInput\n      }) }, h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), items.map((item, index) => {\n      return (h(\"div\", { class: \"picker-item\", \"data-value\": item.value, \"data-index\": index, onClick: (ev) => {\n          this.centerPickerItemInView(ev.target);\n        } }, item.text));\n    }), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\"), h(\"div\", { class: \"picker-item picker-item-empty\" }, \"\\u00A0\")));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"value\": [\"valueChange\"]\n  }; }\n  static get style() { return {\n    ios: pickerColumnInternalIosCss,\n    md: pickerColumnInternalMdCss\n  }; }\n};\nconst PICKER_COL_ACTIVE = 'picker-item-active';\nPickerColumnInternal = /*@__PURE__*/ proxyCustomElement(PickerColumnInternal, [33, \"ion-picker-column-internal\", {\n    \"items\": [16],\n    \"value\": [1032],\n    \"color\": [513],\n    \"numericInput\": [4, \"numeric-input\"],\n    \"isActive\": [32]\n  }]);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-picker-column-internal\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-picker-column-internal\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, PickerColumnInternal);\n      }\n      break;\n  } });\n}\n\nexport { PickerColumnInternal as P, defineCustomElement as d };\n"]},"metadata":{},"sourceType":"module"}